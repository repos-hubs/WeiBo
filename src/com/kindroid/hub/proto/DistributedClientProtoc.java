// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DistributedClientProtoc.proto

package com.kindroid.hub.proto;

public final class DistributedClientProtoc {
  private DistributedClientProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Client extends
      com.google.protobuf.GeneratedMessage {
    // Use Client.newBuilder() to construct.
    private Client() {
      initFields();
    }
    private Client(boolean noInit) {}
    
    private static final Client defaultInstance;
    public static Client getDefaultInstance() {
      return defaultInstance;
    }
    
    public Client getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.DistributedClientProtoc.internal_static_com_kindroid_hub_proto_Client_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.DistributedClientProtoc.internal_static_com_kindroid_hub_proto_Client_fieldAccessorTable;
    }
    
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required int32 resID = 2;
    public static final int RESID_FIELD_NUMBER = 2;
    private boolean hasResID;
    private int resID_ = 0;
    public boolean hasResID() { return hasResID; }
    public int getResID() { return resID_; }
    
    // optional string manuer = 3;
    public static final int MANUER_FIELD_NUMBER = 3;
    private boolean hasManuer;
    private java.lang.String manuer_ = "";
    public boolean hasManuer() { return hasManuer; }
    public java.lang.String getManuer() { return manuer_; }
    
    // optional string model = 4;
    public static final int MODEL_FIELD_NUMBER = 4;
    private boolean hasModel;
    private java.lang.String model_ = "";
    public boolean hasModel() { return hasModel; }
    public java.lang.String getModel() { return model_; }
    
    // optional string build = 5;
    public static final int BUILD_FIELD_NUMBER = 5;
    private boolean hasBuild;
    private java.lang.String build_ = "";
    public boolean hasBuild() { return hasBuild; }
    public java.lang.String getBuild() { return build_; }
    
    // optional string fingerprint = 6;
    public static final int FINGERPRINT_FIELD_NUMBER = 6;
    private boolean hasFingerprint;
    private java.lang.String fingerprint_ = "";
    public boolean hasFingerprint() { return hasFingerprint; }
    public java.lang.String getFingerprint() { return fingerprint_; }
    
    // optional string imei = 7;
    public static final int IMEI_FIELD_NUMBER = 7;
    private boolean hasImei;
    private java.lang.String imei_ = "";
    public boolean hasImei() { return hasImei; }
    public java.lang.String getImei() { return imei_; }
    
    // optional string host = 8;
    public static final int HOST_FIELD_NUMBER = 8;
    private boolean hasHost;
    private java.lang.String host_ = "";
    public boolean hasHost() { return hasHost; }
    public java.lang.String getHost() { return host_; }
    
    // optional string device = 9;
    public static final int DEVICE_FIELD_NUMBER = 9;
    private boolean hasDevice;
    private java.lang.String device_ = "";
    public boolean hasDevice() { return hasDevice; }
    public java.lang.String getDevice() { return device_; }
    
    // optional string brand = 10;
    public static final int BRAND_FIELD_NUMBER = 10;
    private boolean hasBrand;
    private java.lang.String brand_ = "";
    public boolean hasBrand() { return hasBrand; }
    public java.lang.String getBrand() { return brand_; }
    
    // optional string hardware = 11;
    public static final int HARDWARE_FIELD_NUMBER = 11;
    private boolean hasHardware;
    private java.lang.String hardware_ = "";
    public boolean hasHardware() { return hasHardware; }
    public java.lang.String getHardware() { return hardware_; }
    
    // optional string board = 12;
    public static final int BOARD_FIELD_NUMBER = 12;
    private boolean hasBoard;
    private java.lang.String board_ = "";
    public boolean hasBoard() { return hasBoard; }
    public java.lang.String getBoard() { return board_; }
    
    // optional string version = 13;
    public static final int VERSION_FIELD_NUMBER = 13;
    private boolean hasVersion;
    private java.lang.String version_ = "";
    public boolean hasVersion() { return hasVersion; }
    public java.lang.String getVersion() { return version_; }
    
    // optional string osversion = 14;
    public static final int OSVERSION_FIELD_NUMBER = 14;
    private boolean hasOsversion;
    private java.lang.String osversion_ = "";
    public boolean hasOsversion() { return hasOsversion; }
    public java.lang.String getOsversion() { return osversion_; }
    
    // optional string sdkversion = 15;
    public static final int SDKVERSION_FIELD_NUMBER = 15;
    private boolean hasSdkversion;
    private java.lang.String sdkversion_ = "";
    public boolean hasSdkversion() { return hasSdkversion; }
    public java.lang.String getSdkversion() { return sdkversion_; }
    
    // optional string sim = 16;
    public static final int SIM_FIELD_NUMBER = 16;
    private boolean hasSim;
    private java.lang.String sim_ = "";
    public boolean hasSim() { return hasSim; }
    public java.lang.String getSim() { return sim_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasResID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasResID()) {
        output.writeInt32(2, getResID());
      }
      if (hasManuer()) {
        output.writeString(3, getManuer());
      }
      if (hasModel()) {
        output.writeString(4, getModel());
      }
      if (hasBuild()) {
        output.writeString(5, getBuild());
      }
      if (hasFingerprint()) {
        output.writeString(6, getFingerprint());
      }
      if (hasImei()) {
        output.writeString(7, getImei());
      }
      if (hasHost()) {
        output.writeString(8, getHost());
      }
      if (hasDevice()) {
        output.writeString(9, getDevice());
      }
      if (hasBrand()) {
        output.writeString(10, getBrand());
      }
      if (hasHardware()) {
        output.writeString(11, getHardware());
      }
      if (hasBoard()) {
        output.writeString(12, getBoard());
      }
      if (hasVersion()) {
        output.writeString(13, getVersion());
      }
      if (hasOsversion()) {
        output.writeString(14, getOsversion());
      }
      if (hasSdkversion()) {
        output.writeString(15, getSdkversion());
      }
      if (hasSim()) {
        output.writeString(16, getSim());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasResID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getResID());
      }
      if (hasManuer()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getManuer());
      }
      if (hasModel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getModel());
      }
      if (hasBuild()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getBuild());
      }
      if (hasFingerprint()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getFingerprint());
      }
      if (hasImei()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getImei());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getHost());
      }
      if (hasDevice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getDevice());
      }
      if (hasBrand()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getBrand());
      }
      if (hasHardware()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getHardware());
      }
      if (hasBoard()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getBoard());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getVersion());
      }
      if (hasOsversion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(14, getOsversion());
      }
      if (hasSdkversion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(15, getSdkversion());
      }
      if (hasSim()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(16, getSim());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.Client parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.DistributedClientProtoc.Client prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.DistributedClientProtoc.Client result;
      
      // Construct using com.kindroid.hub.proto.DistributedClientProtoc.Client.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.DistributedClientProtoc.Client();
        return builder;
      }
      
      protected com.kindroid.hub.proto.DistributedClientProtoc.Client internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.DistributedClientProtoc.Client();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.DistributedClientProtoc.Client.getDescriptor();
      }
      
      public com.kindroid.hub.proto.DistributedClientProtoc.Client getDefaultInstanceForType() {
        return com.kindroid.hub.proto.DistributedClientProtoc.Client.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.DistributedClientProtoc.Client build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.DistributedClientProtoc.Client buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.DistributedClientProtoc.Client buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.DistributedClientProtoc.Client returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.DistributedClientProtoc.Client) {
          return mergeFrom((com.kindroid.hub.proto.DistributedClientProtoc.Client)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.DistributedClientProtoc.Client other) {
        if (other == com.kindroid.hub.proto.DistributedClientProtoc.Client.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasResID()) {
          setResID(other.getResID());
        }
        if (other.hasManuer()) {
          setManuer(other.getManuer());
        }
        if (other.hasModel()) {
          setModel(other.getModel());
        }
        if (other.hasBuild()) {
          setBuild(other.getBuild());
        }
        if (other.hasFingerprint()) {
          setFingerprint(other.getFingerprint());
        }
        if (other.hasImei()) {
          setImei(other.getImei());
        }
        if (other.hasHost()) {
          setHost(other.getHost());
        }
        if (other.hasDevice()) {
          setDevice(other.getDevice());
        }
        if (other.hasBrand()) {
          setBrand(other.getBrand());
        }
        if (other.hasHardware()) {
          setHardware(other.getHardware());
        }
        if (other.hasBoard()) {
          setBoard(other.getBoard());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasOsversion()) {
          setOsversion(other.getOsversion());
        }
        if (other.hasSdkversion()) {
          setSdkversion(other.getSdkversion());
        }
        if (other.hasSim()) {
          setSim(other.getSim());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 16: {
              setResID(input.readInt32());
              break;
            }
            case 26: {
              setManuer(input.readString());
              break;
            }
            case 34: {
              setModel(input.readString());
              break;
            }
            case 42: {
              setBuild(input.readString());
              break;
            }
            case 50: {
              setFingerprint(input.readString());
              break;
            }
            case 58: {
              setImei(input.readString());
              break;
            }
            case 66: {
              setHost(input.readString());
              break;
            }
            case 74: {
              setDevice(input.readString());
              break;
            }
            case 82: {
              setBrand(input.readString());
              break;
            }
            case 90: {
              setHardware(input.readString());
              break;
            }
            case 98: {
              setBoard(input.readString());
              break;
            }
            case 106: {
              setVersion(input.readString());
              break;
            }
            case 114: {
              setOsversion(input.readString());
              break;
            }
            case 122: {
              setSdkversion(input.readString());
              break;
            }
            case 130: {
              setSim(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required int32 resID = 2;
      public boolean hasResID() {
        return result.hasResID();
      }
      public int getResID() {
        return result.getResID();
      }
      public Builder setResID(int value) {
        result.hasResID = true;
        result.resID_ = value;
        return this;
      }
      public Builder clearResID() {
        result.hasResID = false;
        result.resID_ = 0;
        return this;
      }
      
      // optional string manuer = 3;
      public boolean hasManuer() {
        return result.hasManuer();
      }
      public java.lang.String getManuer() {
        return result.getManuer();
      }
      public Builder setManuer(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasManuer = true;
        result.manuer_ = value;
        return this;
      }
      public Builder clearManuer() {
        result.hasManuer = false;
        result.manuer_ = getDefaultInstance().getManuer();
        return this;
      }
      
      // optional string model = 4;
      public boolean hasModel() {
        return result.hasModel();
      }
      public java.lang.String getModel() {
        return result.getModel();
      }
      public Builder setModel(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasModel = true;
        result.model_ = value;
        return this;
      }
      public Builder clearModel() {
        result.hasModel = false;
        result.model_ = getDefaultInstance().getModel();
        return this;
      }
      
      // optional string build = 5;
      public boolean hasBuild() {
        return result.hasBuild();
      }
      public java.lang.String getBuild() {
        return result.getBuild();
      }
      public Builder setBuild(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBuild = true;
        result.build_ = value;
        return this;
      }
      public Builder clearBuild() {
        result.hasBuild = false;
        result.build_ = getDefaultInstance().getBuild();
        return this;
      }
      
      // optional string fingerprint = 6;
      public boolean hasFingerprint() {
        return result.hasFingerprint();
      }
      public java.lang.String getFingerprint() {
        return result.getFingerprint();
      }
      public Builder setFingerprint(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFingerprint = true;
        result.fingerprint_ = value;
        return this;
      }
      public Builder clearFingerprint() {
        result.hasFingerprint = false;
        result.fingerprint_ = getDefaultInstance().getFingerprint();
        return this;
      }
      
      // optional string imei = 7;
      public boolean hasImei() {
        return result.hasImei();
      }
      public java.lang.String getImei() {
        return result.getImei();
      }
      public Builder setImei(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImei = true;
        result.imei_ = value;
        return this;
      }
      public Builder clearImei() {
        result.hasImei = false;
        result.imei_ = getDefaultInstance().getImei();
        return this;
      }
      
      // optional string host = 8;
      public boolean hasHost() {
        return result.hasHost();
      }
      public java.lang.String getHost() {
        return result.getHost();
      }
      public Builder setHost(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = getDefaultInstance().getHost();
        return this;
      }
      
      // optional string device = 9;
      public boolean hasDevice() {
        return result.hasDevice();
      }
      public java.lang.String getDevice() {
        return result.getDevice();
      }
      public Builder setDevice(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDevice = true;
        result.device_ = value;
        return this;
      }
      public Builder clearDevice() {
        result.hasDevice = false;
        result.device_ = getDefaultInstance().getDevice();
        return this;
      }
      
      // optional string brand = 10;
      public boolean hasBrand() {
        return result.hasBrand();
      }
      public java.lang.String getBrand() {
        return result.getBrand();
      }
      public Builder setBrand(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBrand = true;
        result.brand_ = value;
        return this;
      }
      public Builder clearBrand() {
        result.hasBrand = false;
        result.brand_ = getDefaultInstance().getBrand();
        return this;
      }
      
      // optional string hardware = 11;
      public boolean hasHardware() {
        return result.hasHardware();
      }
      public java.lang.String getHardware() {
        return result.getHardware();
      }
      public Builder setHardware(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHardware = true;
        result.hardware_ = value;
        return this;
      }
      public Builder clearHardware() {
        result.hasHardware = false;
        result.hardware_ = getDefaultInstance().getHardware();
        return this;
      }
      
      // optional string board = 12;
      public boolean hasBoard() {
        return result.hasBoard();
      }
      public java.lang.String getBoard() {
        return result.getBoard();
      }
      public Builder setBoard(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBoard = true;
        result.board_ = value;
        return this;
      }
      public Builder clearBoard() {
        result.hasBoard = false;
        result.board_ = getDefaultInstance().getBoard();
        return this;
      }
      
      // optional string version = 13;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public java.lang.String getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = getDefaultInstance().getVersion();
        return this;
      }
      
      // optional string osversion = 14;
      public boolean hasOsversion() {
        return result.hasOsversion();
      }
      public java.lang.String getOsversion() {
        return result.getOsversion();
      }
      public Builder setOsversion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOsversion = true;
        result.osversion_ = value;
        return this;
      }
      public Builder clearOsversion() {
        result.hasOsversion = false;
        result.osversion_ = getDefaultInstance().getOsversion();
        return this;
      }
      
      // optional string sdkversion = 15;
      public boolean hasSdkversion() {
        return result.hasSdkversion();
      }
      public java.lang.String getSdkversion() {
        return result.getSdkversion();
      }
      public Builder setSdkversion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSdkversion = true;
        result.sdkversion_ = value;
        return this;
      }
      public Builder clearSdkversion() {
        result.hasSdkversion = false;
        result.sdkversion_ = getDefaultInstance().getSdkversion();
        return this;
      }
      
      // optional string sim = 16;
      public boolean hasSim() {
        return result.hasSim();
      }
      public java.lang.String getSim() {
        return result.getSim();
      }
      public Builder setSim(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSim = true;
        result.sim_ = value;
        return this;
      }
      public Builder clearSim() {
        result.hasSim = false;
        result.sim_ = getDefaultInstance().getSim();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.Client)
    }
    
    static {
      defaultInstance = new Client(true);
      com.kindroid.hub.proto.DistributedClientProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.Client)
  }
  
  public static final class ClientRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ClientRequest.newBuilder() to construct.
    private ClientRequest() {
      initFields();
    }
    private ClientRequest(boolean noInit) {}
    
    private static final ClientRequest defaultInstance;
    public static ClientRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.DistributedClientProtoc.internal_static_com_kindroid_hub_proto_ClientRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.DistributedClientProtoc.internal_static_com_kindroid_hub_proto_ClientRequest_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Client client = 1;
    public static final int CLIENT_FIELD_NUMBER = 1;
    private boolean hasClient;
    private com.kindroid.hub.proto.DistributedClientProtoc.Client client_;
    public boolean hasClient() { return hasClient; }
    public com.kindroid.hub.proto.DistributedClientProtoc.Client getClient() { return client_; }
    
    private void initFields() {
      client_ = com.kindroid.hub.proto.DistributedClientProtoc.Client.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasClient) return false;
      if (!getClient().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasClient()) {
        output.writeMessage(1, getClient());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasClient()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getClient());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest result;
      
      // Construct using com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest) {
          return mergeFrom((com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest other) {
        if (other == com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest.getDefaultInstance()) return this;
        if (other.hasClient()) {
          mergeClient(other.getClient());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.DistributedClientProtoc.Client.Builder subBuilder = com.kindroid.hub.proto.DistributedClientProtoc.Client.newBuilder();
              if (hasClient()) {
                subBuilder.mergeFrom(getClient());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClient(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Client client = 1;
      public boolean hasClient() {
        return result.hasClient();
      }
      public com.kindroid.hub.proto.DistributedClientProtoc.Client getClient() {
        return result.getClient();
      }
      public Builder setClient(com.kindroid.hub.proto.DistributedClientProtoc.Client value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasClient = true;
        result.client_ = value;
        return this;
      }
      public Builder setClient(com.kindroid.hub.proto.DistributedClientProtoc.Client.Builder builderForValue) {
        result.hasClient = true;
        result.client_ = builderForValue.build();
        return this;
      }
      public Builder mergeClient(com.kindroid.hub.proto.DistributedClientProtoc.Client value) {
        if (result.hasClient() &&
            result.client_ != com.kindroid.hub.proto.DistributedClientProtoc.Client.getDefaultInstance()) {
          result.client_ =
            com.kindroid.hub.proto.DistributedClientProtoc.Client.newBuilder(result.client_).mergeFrom(value).buildPartial();
        } else {
          result.client_ = value;
        }
        result.hasClient = true;
        return this;
      }
      public Builder clearClient() {
        result.hasClient = false;
        result.client_ = com.kindroid.hub.proto.DistributedClientProtoc.Client.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ClientRequest)
    }
    
    static {
      defaultInstance = new ClientRequest(true);
      com.kindroid.hub.proto.DistributedClientProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ClientRequest)
  }
  
  public static final class ClientResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ClientResponse.newBuilder() to construct.
    private ClientResponse() {
      initFields();
    }
    private ClientResponse(boolean noInit) {}
    
    private static final ClientResponse defaultInstance;
    public static ClientResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.DistributedClientProtoc.internal_static_com_kindroid_hub_proto_ClientResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.DistributedClientProtoc.internal_static_com_kindroid_hub_proto_ClientResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse result;
      
      // Construct using com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse) {
          return mergeFrom((com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse other) {
        if (other == com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ClientResponse)
    }
    
    static {
      defaultInstance = new ClientResponse(true);
      com.kindroid.hub.proto.DistributedClientProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ClientResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_Client_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_Client_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ClientRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ClientRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ClientResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ClientResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035DistributedClientProtoc.proto\022\026com.kin" +
      "droid.hub.proto\032\024ResponseProtoc.proto\"\207\002" +
      "\n\006Client\022\n\n\002id\030\001 \001(\005\022\r\n\005resID\030\002 \002(\005\022\016\n\006m" +
      "anuer\030\003 \001(\t\022\r\n\005model\030\004 \001(\t\022\r\n\005build\030\005 \001(" +
      "\t\022\023\n\013fingerprint\030\006 \001(\t\022\014\n\004imei\030\007 \001(\t\022\014\n\004" +
      "host\030\010 \001(\t\022\016\n\006device\030\t \001(\t\022\r\n\005brand\030\n \001(" +
      "\t\022\020\n\010hardware\030\013 \001(\t\022\r\n\005board\030\014 \001(\t\022\017\n\007ve" +
      "rsion\030\r \001(\t\022\021\n\tosversion\030\016 \001(\t\022\022\n\nsdkver" +
      "sion\030\017 \001(\t\022\013\n\003sim\030\020 \001(\t\"?\n\rClientRequest" +
      "\022.\n\006client\030\001 \002(\0132\036.com.kindroid.hub.prot",
      "o.Client\"D\n\016ClientResponse\0222\n\010response\030\001" +
      " \002(\0132 .com.kindroid.hub.proto.ResponseB\030" +
      "\n\026com.kindroid.hub.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_hub_proto_Client_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_hub_proto_Client_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_Client_descriptor,
              new java.lang.String[] { "Id", "ResID", "Manuer", "Model", "Build", "Fingerprint", "Imei", "Host", "Device", "Brand", "Hardware", "Board", "Version", "Osversion", "Sdkversion", "Sim", },
              com.kindroid.hub.proto.DistributedClientProtoc.Client.class,
              com.kindroid.hub.proto.DistributedClientProtoc.Client.Builder.class);
          internal_static_com_kindroid_hub_proto_ClientRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_hub_proto_ClientRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ClientRequest_descriptor,
              new java.lang.String[] { "Client", },
              com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest.class,
              com.kindroid.hub.proto.DistributedClientProtoc.ClientRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ClientResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_hub_proto_ClientResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ClientResponse_descriptor,
              new java.lang.String[] { "Response", },
              com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse.class,
              com.kindroid.hub.proto.DistributedClientProtoc.ClientResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.hub.proto.ResponseProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
