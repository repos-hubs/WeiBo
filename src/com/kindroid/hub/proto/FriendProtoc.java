// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendProtoc.proto

package com.kindroid.hub.proto;

public final class FriendProtoc {
  private FriendProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SearchAccountRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchAccountRequest.newBuilder() to construct.
    private SearchAccountRequest() {
      initFields();
    }
    private SearchAccountRequest(boolean noInit) {}
    
    private static final SearchAccountRequest defaultInstance;
    public static SearchAccountRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchAccountRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_SearchAccountRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_SearchAccountRequest_fieldAccessorTable;
    }
    
    // required string keyword = 1;
    public static final int KEYWORD_FIELD_NUMBER = 1;
    private boolean hasKeyword;
    private java.lang.String keyword_ = "";
    public boolean hasKeyword() { return hasKeyword; }
    public java.lang.String getKeyword() { return keyword_; }
    
    // required .com.kindroid.hub.proto.PageHelper pageHelper = 2;
    public static final int PAGEHELPER_FIELD_NUMBER = 2;
    private boolean hasPageHelper;
    private com.kindroid.hub.proto.CommonProtoc.PageHelper pageHelper_;
    public boolean hasPageHelper() { return hasPageHelper; }
    public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() { return pageHelper_; }
    
    private void initFields() {
      pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasKeyword) return false;
      if (!hasPageHelper) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasKeyword()) {
        output.writeString(1, getKeyword());
      }
      if (hasPageHelper()) {
        output.writeMessage(2, getPageHelper());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKeyword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getKeyword());
      }
      if (hasPageHelper()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPageHelper());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest result;
      
      // Construct using com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest) {
          return mergeFrom((com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest other) {
        if (other == com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest.getDefaultInstance()) return this;
        if (other.hasKeyword()) {
          setKeyword(other.getKeyword());
        }
        if (other.hasPageHelper()) {
          mergePageHelper(other.getPageHelper());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setKeyword(input.readString());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder();
              if (hasPageHelper()) {
                subBuilder.mergeFrom(getPageHelper());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPageHelper(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string keyword = 1;
      public boolean hasKeyword() {
        return result.hasKeyword();
      }
      public java.lang.String getKeyword() {
        return result.getKeyword();
      }
      public Builder setKeyword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKeyword = true;
        result.keyword_ = value;
        return this;
      }
      public Builder clearKeyword() {
        result.hasKeyword = false;
        result.keyword_ = getDefaultInstance().getKeyword();
        return this;
      }
      
      // required .com.kindroid.hub.proto.PageHelper pageHelper = 2;
      public boolean hasPageHelper() {
        return result.hasPageHelper();
      }
      public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() {
        return result.getPageHelper();
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPageHelper = true;
        result.pageHelper_ = value;
        return this;
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder builderForValue) {
        result.hasPageHelper = true;
        result.pageHelper_ = builderForValue.build();
        return this;
      }
      public Builder mergePageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (result.hasPageHelper() &&
            result.pageHelper_ != com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance()) {
          result.pageHelper_ =
            com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder(result.pageHelper_).mergeFrom(value).buildPartial();
        } else {
          result.pageHelper_ = value;
        }
        result.hasPageHelper = true;
        return this;
      }
      public Builder clearPageHelper() {
        result.hasPageHelper = false;
        result.pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.SearchAccountRequest)
    }
    
    static {
      defaultInstance = new SearchAccountRequest(true);
      com.kindroid.hub.proto.FriendProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.SearchAccountRequest)
  }
  
  public static final class SearchAccountResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchAccountResponse.newBuilder() to construct.
    private SearchAccountResponse() {
      initFields();
    }
    private SearchAccountResponse(boolean noInit) {}
    
    private static final SearchAccountResponse defaultInstance;
    public static SearchAccountResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchAccountResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_SearchAccountResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_SearchAccountResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.Account account = 2;
    public static final int ACCOUNT_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.UserProtoc.Account> account_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.UserProtoc.Account> getAccountList() {
      return account_;
    }
    public int getAccountCount() { return account_.size(); }
    public com.kindroid.hub.proto.UserProtoc.Account getAccount(int index) {
      return account_.get(index);
    }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.UserProtoc.Account element : getAccountList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.UserProtoc.Account element : getAccountList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse result;
      
      // Construct using com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.account_ != java.util.Collections.EMPTY_LIST) {
          result.account_ =
            java.util.Collections.unmodifiableList(result.account_);
        }
        com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse) {
          return mergeFrom((com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse other) {
        if (other == com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.account_.isEmpty()) {
          if (result.account_.isEmpty()) {
            result.account_ = new java.util.ArrayList<com.kindroid.hub.proto.UserProtoc.Account>();
          }
          result.account_.addAll(other.account_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.UserProtoc.Account.Builder subBuilder = com.kindroid.hub.proto.UserProtoc.Account.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAccount(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.Account account = 2;
      public java.util.List<com.kindroid.hub.proto.UserProtoc.Account> getAccountList() {
        return java.util.Collections.unmodifiableList(result.account_);
      }
      public int getAccountCount() {
        return result.getAccountCount();
      }
      public com.kindroid.hub.proto.UserProtoc.Account getAccount(int index) {
        return result.getAccount(index);
      }
      public Builder setAccount(int index, com.kindroid.hub.proto.UserProtoc.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.account_.set(index, value);
        return this;
      }
      public Builder setAccount(int index, com.kindroid.hub.proto.UserProtoc.Account.Builder builderForValue) {
        result.account_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAccount(com.kindroid.hub.proto.UserProtoc.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.account_.isEmpty()) {
          result.account_ = new java.util.ArrayList<com.kindroid.hub.proto.UserProtoc.Account>();
        }
        result.account_.add(value);
        return this;
      }
      public Builder addAccount(com.kindroid.hub.proto.UserProtoc.Account.Builder builderForValue) {
        if (result.account_.isEmpty()) {
          result.account_ = new java.util.ArrayList<com.kindroid.hub.proto.UserProtoc.Account>();
        }
        result.account_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAccount(
          java.lang.Iterable<? extends com.kindroid.hub.proto.UserProtoc.Account> values) {
        if (result.account_.isEmpty()) {
          result.account_ = new java.util.ArrayList<com.kindroid.hub.proto.UserProtoc.Account>();
        }
        super.addAll(values, result.account_);
        return this;
      }
      public Builder clearAccount() {
        result.account_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.SearchAccountResponse)
    }
    
    static {
      defaultInstance = new SearchAccountResponse(true);
      com.kindroid.hub.proto.FriendProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.SearchAccountResponse)
  }
  
  public static final class AddFriendRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AddFriendRequest.newBuilder() to construct.
    private AddFriendRequest() {
      initFields();
    }
    private AddFriendRequest(boolean noInit) {}
    
    private static final AddFriendRequest defaultInstance;
    public static AddFriendRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddFriendRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_AddFriendRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_AddFriendRequest_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // repeated int64 accountId = 2;
    public static final int ACCOUNTID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> accountId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getAccountIdList() {
      return accountId_;
    }
    public int getAccountIdCount() { return accountId_.size(); }
    public long getAccountId(int index) {
      return accountId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      for (long element : getAccountIdList()) {
        output.writeInt64(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      {
        int dataSize = 0;
        for (long element : getAccountIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getAccountIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.FriendProtoc.AddFriendRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.FriendProtoc.AddFriendRequest result;
      
      // Construct using com.kindroid.hub.proto.FriendProtoc.AddFriendRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.FriendProtoc.AddFriendRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.FriendProtoc.AddFriendRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.FriendProtoc.AddFriendRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.FriendProtoc.AddFriendRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.AddFriendRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.FriendProtoc.AddFriendRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.FriendProtoc.AddFriendRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.FriendProtoc.AddFriendRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.AddFriendRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.accountId_ != java.util.Collections.EMPTY_LIST) {
          result.accountId_ =
            java.util.Collections.unmodifiableList(result.accountId_);
        }
        com.kindroid.hub.proto.FriendProtoc.AddFriendRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.FriendProtoc.AddFriendRequest) {
          return mergeFrom((com.kindroid.hub.proto.FriendProtoc.AddFriendRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.FriendProtoc.AddFriendRequest other) {
        if (other == com.kindroid.hub.proto.FriendProtoc.AddFriendRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (!other.accountId_.isEmpty()) {
          if (result.accountId_.isEmpty()) {
            result.accountId_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.accountId_.addAll(other.accountId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 16: {
              addAccountId(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAccountId(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // repeated int64 accountId = 2;
      public java.util.List<java.lang.Long> getAccountIdList() {
        return java.util.Collections.unmodifiableList(result.accountId_);
      }
      public int getAccountIdCount() {
        return result.getAccountIdCount();
      }
      public long getAccountId(int index) {
        return result.getAccountId(index);
      }
      public Builder setAccountId(int index, long value) {
        result.accountId_.set(index, value);
        return this;
      }
      public Builder addAccountId(long value) {
        if (result.accountId_.isEmpty()) {
          result.accountId_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.accountId_.add(value);
        return this;
      }
      public Builder addAllAccountId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.accountId_.isEmpty()) {
          result.accountId_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.accountId_);
        return this;
      }
      public Builder clearAccountId() {
        result.accountId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.AddFriendRequest)
    }
    
    static {
      defaultInstance = new AddFriendRequest(true);
      com.kindroid.hub.proto.FriendProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.AddFriendRequest)
  }
  
  public static final class AddFriendResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use AddFriendResponse.newBuilder() to construct.
    private AddFriendResponse() {
      initFields();
    }
    private AddFriendResponse(boolean noInit) {}
    
    private static final AddFriendResponse defaultInstance;
    public static AddFriendResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddFriendResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_AddFriendResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_AddFriendResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.AddFriendResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.FriendProtoc.AddFriendResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.FriendProtoc.AddFriendResponse result;
      
      // Construct using com.kindroid.hub.proto.FriendProtoc.AddFriendResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.FriendProtoc.AddFriendResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.FriendProtoc.AddFriendResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.FriendProtoc.AddFriendResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.FriendProtoc.AddFriendResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.AddFriendResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.FriendProtoc.AddFriendResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.FriendProtoc.AddFriendResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.FriendProtoc.AddFriendResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.AddFriendResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.FriendProtoc.AddFriendResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.FriendProtoc.AddFriendResponse) {
          return mergeFrom((com.kindroid.hub.proto.FriendProtoc.AddFriendResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.FriendProtoc.AddFriendResponse other) {
        if (other == com.kindroid.hub.proto.FriendProtoc.AddFriendResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.AddFriendResponse)
    }
    
    static {
      defaultInstance = new AddFriendResponse(true);
      com.kindroid.hub.proto.FriendProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.AddFriendResponse)
  }
  
  public static final class ImportRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ImportRequest.newBuilder() to construct.
    private ImportRequest() {
      initFields();
    }
    private ImportRequest(boolean noInit) {}
    
    private static final ImportRequest defaultInstance;
    public static ImportRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ImportRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_ImportRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_ImportRequest_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // repeated string phone = 2;
    public static final int PHONE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> phone_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getPhoneList() {
      return phone_;
    }
    public int getPhoneCount() { return phone_.size(); }
    public java.lang.String getPhone(int index) {
      return phone_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      for (java.lang.String element : getPhoneList()) {
        output.writeString(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getPhoneList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPhoneList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.FriendProtoc.ImportRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.FriendProtoc.ImportRequest result;
      
      // Construct using com.kindroid.hub.proto.FriendProtoc.ImportRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.FriendProtoc.ImportRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.FriendProtoc.ImportRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.FriendProtoc.ImportRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.FriendProtoc.ImportRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.ImportRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.FriendProtoc.ImportRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.FriendProtoc.ImportRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.FriendProtoc.ImportRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.ImportRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.phone_ != java.util.Collections.EMPTY_LIST) {
          result.phone_ =
            java.util.Collections.unmodifiableList(result.phone_);
        }
        com.kindroid.hub.proto.FriendProtoc.ImportRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.FriendProtoc.ImportRequest) {
          return mergeFrom((com.kindroid.hub.proto.FriendProtoc.ImportRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.FriendProtoc.ImportRequest other) {
        if (other == com.kindroid.hub.proto.FriendProtoc.ImportRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (!other.phone_.isEmpty()) {
          if (result.phone_.isEmpty()) {
            result.phone_ = new java.util.ArrayList<java.lang.String>();
          }
          result.phone_.addAll(other.phone_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              addPhone(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // repeated string phone = 2;
      public java.util.List<java.lang.String> getPhoneList() {
        return java.util.Collections.unmodifiableList(result.phone_);
      }
      public int getPhoneCount() {
        return result.getPhoneCount();
      }
      public java.lang.String getPhone(int index) {
        return result.getPhone(index);
      }
      public Builder setPhone(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.phone_.set(index, value);
        return this;
      }
      public Builder addPhone(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.phone_.isEmpty()) {
          result.phone_ = new java.util.ArrayList<java.lang.String>();
        }
        result.phone_.add(value);
        return this;
      }
      public Builder addAllPhone(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.phone_.isEmpty()) {
          result.phone_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.phone_);
        return this;
      }
      public Builder clearPhone() {
        result.phone_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ImportRequest)
    }
    
    static {
      defaultInstance = new ImportRequest(true);
      com.kindroid.hub.proto.FriendProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ImportRequest)
  }
  
  public static final class ImportResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ImportResponse.newBuilder() to construct.
    private ImportResponse() {
      initFields();
    }
    private ImportResponse(boolean noInit) {}
    
    private static final ImportResponse defaultInstance;
    public static ImportResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ImportResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_ImportResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.FriendProtoc.internal_static_com_kindroid_hub_proto_ImportResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.FriendProtoc.ImportResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.FriendProtoc.ImportResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.FriendProtoc.ImportResponse result;
      
      // Construct using com.kindroid.hub.proto.FriendProtoc.ImportResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.FriendProtoc.ImportResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.FriendProtoc.ImportResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.FriendProtoc.ImportResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.FriendProtoc.ImportResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.ImportResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.FriendProtoc.ImportResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.FriendProtoc.ImportResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.FriendProtoc.ImportResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.FriendProtoc.ImportResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.FriendProtoc.ImportResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.FriendProtoc.ImportResponse) {
          return mergeFrom((com.kindroid.hub.proto.FriendProtoc.ImportResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.FriendProtoc.ImportResponse other) {
        if (other == com.kindroid.hub.proto.FriendProtoc.ImportResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ImportResponse)
    }
    
    static {
      defaultInstance = new ImportResponse(true);
      com.kindroid.hub.proto.FriendProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ImportResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_SearchAccountRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_SearchAccountRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_SearchAccountResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_SearchAccountResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_AddFriendRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_AddFriendRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_AddFriendResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_AddFriendResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ImportRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ImportRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ImportResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ImportResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022FriendProtoc.proto\022\026com.kindroid.hub.p" +
      "roto\032\024ResponseProtoc.proto\032\022CommonProtoc" +
      ".proto\032\020UserProtoc.proto\"_\n\024SearchAccoun" +
      "tRequest\022\017\n\007keyword\030\001 \002(\t\0226\n\npageHelper\030" +
      "\002 \002(\0132\".com.kindroid.hub.proto.PageHelpe" +
      "r\"}\n\025SearchAccountResponse\0222\n\010response\030\001" +
      " \002(\0132 .com.kindroid.hub.proto.Response\0220" +
      "\n\007account\030\002 \003(\0132\037.com.kindroid.hub.proto" +
      ".Account\"4\n\020AddFriendRequest\022\r\n\005token\030\001 " +
      "\002(\t\022\021\n\taccountId\030\002 \003(\003\"G\n\021AddFriendRespo",
      "nse\0222\n\010response\030\001 \002(\0132 .com.kindroid.hub" +
      ".proto.Response\"-\n\rImportRequest\022\r\n\005toke" +
      "n\030\001 \002(\t\022\r\n\005phone\030\002 \003(\t\"D\n\016ImportResponse" +
      "\0222\n\010response\030\001 \002(\0132 .com.kindroid.hub.pr" +
      "oto.ResponseB\030\n\026com.kindroid.hub.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_hub_proto_SearchAccountRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_hub_proto_SearchAccountRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_SearchAccountRequest_descriptor,
              new java.lang.String[] { "Keyword", "PageHelper", },
              com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest.class,
              com.kindroid.hub.proto.FriendProtoc.SearchAccountRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_SearchAccountResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_hub_proto_SearchAccountResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_SearchAccountResponse_descriptor,
              new java.lang.String[] { "Response", "Account", },
              com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse.class,
              com.kindroid.hub.proto.FriendProtoc.SearchAccountResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_AddFriendRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_hub_proto_AddFriendRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_AddFriendRequest_descriptor,
              new java.lang.String[] { "Token", "AccountId", },
              com.kindroid.hub.proto.FriendProtoc.AddFriendRequest.class,
              com.kindroid.hub.proto.FriendProtoc.AddFriendRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_AddFriendResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_hub_proto_AddFriendResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_AddFriendResponse_descriptor,
              new java.lang.String[] { "Response", },
              com.kindroid.hub.proto.FriendProtoc.AddFriendResponse.class,
              com.kindroid.hub.proto.FriendProtoc.AddFriendResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_ImportRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_hub_proto_ImportRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ImportRequest_descriptor,
              new java.lang.String[] { "Token", "Phone", },
              com.kindroid.hub.proto.FriendProtoc.ImportRequest.class,
              com.kindroid.hub.proto.FriendProtoc.ImportRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ImportResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kindroid_hub_proto_ImportResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ImportResponse_descriptor,
              new java.lang.String[] { "Response", },
              com.kindroid.hub.proto.FriendProtoc.ImportResponse.class,
              com.kindroid.hub.proto.FriendProtoc.ImportResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.hub.proto.ResponseProtoc.getDescriptor(),
          com.kindroid.hub.proto.CommonProtoc.getDescriptor(),
          com.kindroid.hub.proto.UserProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
