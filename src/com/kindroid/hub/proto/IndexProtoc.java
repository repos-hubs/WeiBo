// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IndexProtoc.proto

package com.kindroid.hub.proto;

public final class IndexProtoc {
  private IndexProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class OverviewRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use OverviewRequest.newBuilder() to construct.
    private OverviewRequest() {
      initFields();
    }
    private OverviewRequest(boolean noInit) {}
    
    private static final OverviewRequest defaultInstance;
    public static OverviewRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public OverviewRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_OverviewRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_OverviewRequest_fieldAccessorTable;
    }
    
    // repeated .com.kindroid.hub.proto.ItemType itemTypes = 1;
    public static final int ITEMTYPES_FIELD_NUMBER = 1;
    private java.util.List<com.kindroid.hub.proto.CommonProtoc.ItemType> itemTypes_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.CommonProtoc.ItemType> getItemTypesList() {
      return itemTypes_;
    }
    public int getItemTypesCount() { return itemTypes_.size(); }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemTypes(int index) {
      return itemTypes_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.kindroid.hub.proto.CommonProtoc.ItemType element : getItemTypesList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.kindroid.hub.proto.CommonProtoc.ItemType element : getItemTypesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.IndexProtoc.OverviewRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.IndexProtoc.OverviewRequest result;
      
      // Construct using com.kindroid.hub.proto.IndexProtoc.OverviewRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.IndexProtoc.OverviewRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.IndexProtoc.OverviewRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.IndexProtoc.OverviewRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.IndexProtoc.OverviewRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.OverviewRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.IndexProtoc.OverviewRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.IndexProtoc.OverviewRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.IndexProtoc.OverviewRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.OverviewRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.itemTypes_ != java.util.Collections.EMPTY_LIST) {
          result.itemTypes_ =
            java.util.Collections.unmodifiableList(result.itemTypes_);
        }
        com.kindroid.hub.proto.IndexProtoc.OverviewRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.IndexProtoc.OverviewRequest) {
          return mergeFrom((com.kindroid.hub.proto.IndexProtoc.OverviewRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.IndexProtoc.OverviewRequest other) {
        if (other == com.kindroid.hub.proto.IndexProtoc.OverviewRequest.getDefaultInstance()) return this;
        if (!other.itemTypes_.isEmpty()) {
          if (result.itemTypes_.isEmpty()) {
            result.itemTypes_ = new java.util.ArrayList<com.kindroid.hub.proto.CommonProtoc.ItemType>();
          }
          result.itemTypes_.addAll(other.itemTypes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addItemTypes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.kindroid.hub.proto.ItemType itemTypes = 1;
      public java.util.List<com.kindroid.hub.proto.CommonProtoc.ItemType> getItemTypesList() {
        return java.util.Collections.unmodifiableList(result.itemTypes_);
      }
      public int getItemTypesCount() {
        return result.getItemTypesCount();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemTypes(int index) {
        return result.getItemTypes(index);
      }
      public Builder setItemTypes(int index, com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.itemTypes_.set(index, value);
        return this;
      }
      public Builder setItemTypes(int index, com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.itemTypes_.set(index, builderForValue.build());
        return this;
      }
      public Builder addItemTypes(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.itemTypes_.isEmpty()) {
          result.itemTypes_ = new java.util.ArrayList<com.kindroid.hub.proto.CommonProtoc.ItemType>();
        }
        result.itemTypes_.add(value);
        return this;
      }
      public Builder addItemTypes(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        if (result.itemTypes_.isEmpty()) {
          result.itemTypes_ = new java.util.ArrayList<com.kindroid.hub.proto.CommonProtoc.ItemType>();
        }
        result.itemTypes_.add(builderForValue.build());
        return this;
      }
      public Builder addAllItemTypes(
          java.lang.Iterable<? extends com.kindroid.hub.proto.CommonProtoc.ItemType> values) {
        if (result.itemTypes_.isEmpty()) {
          result.itemTypes_ = new java.util.ArrayList<com.kindroid.hub.proto.CommonProtoc.ItemType>();
        }
        super.addAll(values, result.itemTypes_);
        return this;
      }
      public Builder clearItemTypes() {
        result.itemTypes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.OverviewRequest)
    }
    
    static {
      defaultInstance = new OverviewRequest(true);
      com.kindroid.hub.proto.IndexProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.OverviewRequest)
  }
  
  public static final class OverviewResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use OverviewResponse.newBuilder() to construct.
    private OverviewResponse() {
      initFields();
    }
    private OverviewResponse(boolean noInit) {}
    
    private static final OverviewResponse defaultInstance;
    public static OverviewResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public OverviewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_OverviewResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_OverviewResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.WeiboContent weiboContent = 2;
    public static final int WEIBOCONTENT_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> weiboContent_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> getWeiboContentList() {
      return weiboContent_;
    }
    public int getWeiboContentCount() { return weiboContent_.size(); }
    public com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent getWeiboContent(int index) {
      return weiboContent_.get(index);
    }
    
    // repeated .com.kindroid.hub.proto.RingOrWallPaper ringOrWallPaper = 3;
    public static final int RINGORWALLPAPER_FIELD_NUMBER = 3;
    private java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> ringOrWallPaper_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> getRingOrWallPaperList() {
      return ringOrWallPaper_;
    }
    public int getRingOrWallPaperCount() { return ringOrWallPaper_.size(); }
    public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getRingOrWallPaper(int index) {
      return ringOrWallPaper_.get(index);
    }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent element : getWeiboContentList()) {
        output.writeMessage(2, element);
      }
      for (com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper element : getRingOrWallPaperList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent element : getWeiboContentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper element : getRingOrWallPaperList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.OverviewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.IndexProtoc.OverviewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.IndexProtoc.OverviewResponse result;
      
      // Construct using com.kindroid.hub.proto.IndexProtoc.OverviewResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.IndexProtoc.OverviewResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.IndexProtoc.OverviewResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.IndexProtoc.OverviewResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.IndexProtoc.OverviewResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.OverviewResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.IndexProtoc.OverviewResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.IndexProtoc.OverviewResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.IndexProtoc.OverviewResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.OverviewResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.weiboContent_ != java.util.Collections.EMPTY_LIST) {
          result.weiboContent_ =
            java.util.Collections.unmodifiableList(result.weiboContent_);
        }
        if (result.ringOrWallPaper_ != java.util.Collections.EMPTY_LIST) {
          result.ringOrWallPaper_ =
            java.util.Collections.unmodifiableList(result.ringOrWallPaper_);
        }
        com.kindroid.hub.proto.IndexProtoc.OverviewResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.IndexProtoc.OverviewResponse) {
          return mergeFrom((com.kindroid.hub.proto.IndexProtoc.OverviewResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.IndexProtoc.OverviewResponse other) {
        if (other == com.kindroid.hub.proto.IndexProtoc.OverviewResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.weiboContent_.isEmpty()) {
          if (result.weiboContent_.isEmpty()) {
            result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
          }
          result.weiboContent_.addAll(other.weiboContent_);
        }
        if (!other.ringOrWallPaper_.isEmpty()) {
          if (result.ringOrWallPaper_.isEmpty()) {
            result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
          }
          result.ringOrWallPaper_.addAll(other.ringOrWallPaper_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.Builder subBuilder = com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWeiboContent(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder subBuilder = com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRingOrWallPaper(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.WeiboContent weiboContent = 2;
      public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> getWeiboContentList() {
        return java.util.Collections.unmodifiableList(result.weiboContent_);
      }
      public int getWeiboContentCount() {
        return result.getWeiboContentCount();
      }
      public com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent getWeiboContent(int index) {
        return result.getWeiboContent(index);
      }
      public Builder setWeiboContent(int index, com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.weiboContent_.set(index, value);
        return this;
      }
      public Builder setWeiboContent(int index, com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.Builder builderForValue) {
        result.weiboContent_.set(index, builderForValue.build());
        return this;
      }
      public Builder addWeiboContent(com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.weiboContent_.isEmpty()) {
          result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
        }
        result.weiboContent_.add(value);
        return this;
      }
      public Builder addWeiboContent(com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.Builder builderForValue) {
        if (result.weiboContent_.isEmpty()) {
          result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
        }
        result.weiboContent_.add(builderForValue.build());
        return this;
      }
      public Builder addAllWeiboContent(
          java.lang.Iterable<? extends com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> values) {
        if (result.weiboContent_.isEmpty()) {
          result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
        }
        super.addAll(values, result.weiboContent_);
        return this;
      }
      public Builder clearWeiboContent() {
        result.weiboContent_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.RingOrWallPaper ringOrWallPaper = 3;
      public java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> getRingOrWallPaperList() {
        return java.util.Collections.unmodifiableList(result.ringOrWallPaper_);
      }
      public int getRingOrWallPaperCount() {
        return result.getRingOrWallPaperCount();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getRingOrWallPaper(int index) {
        return result.getRingOrWallPaper(index);
      }
      public Builder setRingOrWallPaper(int index, com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.ringOrWallPaper_.set(index, value);
        return this;
      }
      public Builder setRingOrWallPaper(int index, com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder builderForValue) {
        result.ringOrWallPaper_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRingOrWallPaper(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.ringOrWallPaper_.isEmpty()) {
          result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        result.ringOrWallPaper_.add(value);
        return this;
      }
      public Builder addRingOrWallPaper(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder builderForValue) {
        if (result.ringOrWallPaper_.isEmpty()) {
          result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        result.ringOrWallPaper_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRingOrWallPaper(
          java.lang.Iterable<? extends com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> values) {
        if (result.ringOrWallPaper_.isEmpty()) {
          result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        super.addAll(values, result.ringOrWallPaper_);
        return this;
      }
      public Builder clearRingOrWallPaper() {
        result.ringOrWallPaper_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.OverviewResponse)
    }
    
    static {
      defaultInstance = new OverviewResponse(true);
      com.kindroid.hub.proto.IndexProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.OverviewResponse)
  }
  
  public static final class TopImageRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use TopImageRequest.newBuilder() to construct.
    private TopImageRequest() {
      initFields();
    }
    private TopImageRequest(boolean noInit) {}
    
    private static final TopImageRequest defaultInstance;
    public static TopImageRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopImageRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_TopImageRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_TopImageRequest_fieldAccessorTable;
    }
    
    // optional string request = 1;
    public static final int REQUEST_FIELD_NUMBER = 1;
    private boolean hasRequest;
    private java.lang.String request_ = "";
    public boolean hasRequest() { return hasRequest; }
    public java.lang.String getRequest() { return request_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRequest()) {
        output.writeString(1, getRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.IndexProtoc.TopImageRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.IndexProtoc.TopImageRequest result;
      
      // Construct using com.kindroid.hub.proto.IndexProtoc.TopImageRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.IndexProtoc.TopImageRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.IndexProtoc.TopImageRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.IndexProtoc.TopImageRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.IndexProtoc.TopImageRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.TopImageRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.IndexProtoc.TopImageRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.IndexProtoc.TopImageRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.IndexProtoc.TopImageRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.TopImageRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.IndexProtoc.TopImageRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.IndexProtoc.TopImageRequest) {
          return mergeFrom((com.kindroid.hub.proto.IndexProtoc.TopImageRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.IndexProtoc.TopImageRequest other) {
        if (other == com.kindroid.hub.proto.IndexProtoc.TopImageRequest.getDefaultInstance()) return this;
        if (other.hasRequest()) {
          setRequest(other.getRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setRequest(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string request = 1;
      public boolean hasRequest() {
        return result.hasRequest();
      }
      public java.lang.String getRequest() {
        return result.getRequest();
      }
      public Builder setRequest(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder clearRequest() {
        result.hasRequest = false;
        result.request_ = getDefaultInstance().getRequest();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.TopImageRequest)
    }
    
    static {
      defaultInstance = new TopImageRequest(true);
      com.kindroid.hub.proto.IndexProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.TopImageRequest)
  }
  
  public static final class TopImageResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use TopImageResponse.newBuilder() to construct.
    private TopImageResponse() {
      initFields();
    }
    private TopImageResponse(boolean noInit) {}
    
    private static final TopImageResponse defaultInstance;
    public static TopImageResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopImageResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_TopImageResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.IndexProtoc.internal_static_com_kindroid_hub_proto_TopImageResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated bytes image = 2;
    public static final int IMAGE_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> image_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getImageList() {
      return image_;
    }
    public int getImageCount() { return image_.size(); }
    public com.google.protobuf.ByteString getImage(int index) {
      return image_.get(index);
    }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.google.protobuf.ByteString element : getImageList()) {
        output.writeBytes(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getImageList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getImageList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.IndexProtoc.TopImageResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.IndexProtoc.TopImageResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.IndexProtoc.TopImageResponse result;
      
      // Construct using com.kindroid.hub.proto.IndexProtoc.TopImageResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.IndexProtoc.TopImageResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.IndexProtoc.TopImageResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.IndexProtoc.TopImageResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.IndexProtoc.TopImageResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.TopImageResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.IndexProtoc.TopImageResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.IndexProtoc.TopImageResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.IndexProtoc.TopImageResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.IndexProtoc.TopImageResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.image_ != java.util.Collections.EMPTY_LIST) {
          result.image_ =
            java.util.Collections.unmodifiableList(result.image_);
        }
        com.kindroid.hub.proto.IndexProtoc.TopImageResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.IndexProtoc.TopImageResponse) {
          return mergeFrom((com.kindroid.hub.proto.IndexProtoc.TopImageResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.IndexProtoc.TopImageResponse other) {
        if (other == com.kindroid.hub.proto.IndexProtoc.TopImageResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.image_.isEmpty()) {
          if (result.image_.isEmpty()) {
            result.image_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.image_.addAll(other.image_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              addImage(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated bytes image = 2;
      public java.util.List<com.google.protobuf.ByteString> getImageList() {
        return java.util.Collections.unmodifiableList(result.image_);
      }
      public int getImageCount() {
        return result.getImageCount();
      }
      public com.google.protobuf.ByteString getImage(int index) {
        return result.getImage(index);
      }
      public Builder setImage(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.image_.set(index, value);
        return this;
      }
      public Builder addImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.image_.isEmpty()) {
          result.image_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.image_.add(value);
        return this;
      }
      public Builder addAllImage(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.image_.isEmpty()) {
          result.image_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.image_);
        return this;
      }
      public Builder clearImage() {
        result.image_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.TopImageResponse)
    }
    
    static {
      defaultInstance = new TopImageResponse(true);
      com.kindroid.hub.proto.IndexProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.TopImageResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_OverviewRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_OverviewRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_OverviewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_OverviewResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_TopImageRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_TopImageRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_TopImageResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_TopImageResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021IndexProtoc.proto\022\026com.kindroid.hub.pr" +
      "oto\032\030WeiboContentProtoc.proto\032\033RingOrWal" +
      "lPaperProtoc.proto\032\024ResponseProtoc.proto" +
      "\032\022CommonProtoc.proto\"F\n\017OverviewRequest\022" +
      "3\n\titemTypes\030\001 \003(\0132 .com.kindroid.hub.pr" +
      "oto.ItemType\"\304\001\n\020OverviewResponse\0222\n\010res" +
      "ponse\030\001 \002(\0132 .com.kindroid.hub.proto.Res" +
      "ponse\022:\n\014weiboContent\030\002 \003(\0132$.com.kindro" +
      "id.hub.proto.WeiboContent\022@\n\017ringOrWallP" +
      "aper\030\003 \003(\0132\'.com.kindroid.hub.proto.Ring",
      "OrWallPaper\"\"\n\017TopImageRequest\022\017\n\007reques" +
      "t\030\001 \001(\t\"U\n\020TopImageResponse\0222\n\010response\030" +
      "\001 \002(\0132 .com.kindroid.hub.proto.Response\022" +
      "\r\n\005image\030\002 \003(\014B\030\n\026com.kindroid.hub.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_hub_proto_OverviewRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_hub_proto_OverviewRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_OverviewRequest_descriptor,
              new java.lang.String[] { "ItemTypes", },
              com.kindroid.hub.proto.IndexProtoc.OverviewRequest.class,
              com.kindroid.hub.proto.IndexProtoc.OverviewRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_OverviewResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_hub_proto_OverviewResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_OverviewResponse_descriptor,
              new java.lang.String[] { "Response", "WeiboContent", "RingOrWallPaper", },
              com.kindroid.hub.proto.IndexProtoc.OverviewResponse.class,
              com.kindroid.hub.proto.IndexProtoc.OverviewResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_TopImageRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_hub_proto_TopImageRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_TopImageRequest_descriptor,
              new java.lang.String[] { "Request", },
              com.kindroid.hub.proto.IndexProtoc.TopImageRequest.class,
              com.kindroid.hub.proto.IndexProtoc.TopImageRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_TopImageResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_hub_proto_TopImageResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_TopImageResponse_descriptor,
              new java.lang.String[] { "Response", "Image", },
              com.kindroid.hub.proto.IndexProtoc.TopImageResponse.class,
              com.kindroid.hub.proto.IndexProtoc.TopImageResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.hub.proto.WeiboContentProtoc.getDescriptor(),
          com.kindroid.hub.proto.RingOrWallPaperProtoc.getDescriptor(),
          com.kindroid.hub.proto.ResponseProtoc.getDescriptor(),
          com.kindroid.hub.proto.CommonProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
