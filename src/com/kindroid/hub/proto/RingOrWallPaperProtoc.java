// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RingOrWallPaperProtoc.proto

package com.kindroid.hub.proto;

public final class RingOrWallPaperProtoc {
  private RingOrWallPaperProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class RingOrWallPaper extends
      com.google.protobuf.GeneratedMessage {
    // Use RingOrWallPaper.newBuilder() to construct.
    private RingOrWallPaper() {
      initFields();
    }
    private RingOrWallPaper(boolean noInit) {}
    
    private static final RingOrWallPaper defaultInstance;
    public static RingOrWallPaper getDefaultInstance() {
      return defaultInstance;
    }
    
    public RingOrWallPaper getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_RingOrWallPaper_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_RingOrWallPaper_fieldAccessorTable;
    }
    
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // optional int64 length = 2;
    public static final int LENGTH_FIELD_NUMBER = 2;
    private boolean hasLength;
    private long length_ = 0L;
    public boolean hasLength() { return hasLength; }
    public long getLength() { return length_; }
    
    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string creator = 4;
    public static final int CREATOR_FIELD_NUMBER = 4;
    private boolean hasCreator;
    private java.lang.String creator_ = "";
    public boolean hasCreator() { return hasCreator; }
    public java.lang.String getCreator() { return creator_; }
    
    // optional string timeLeft = 5;
    public static final int TIMELEFT_FIELD_NUMBER = 5;
    private boolean hasTimeLeft;
    private java.lang.String timeLeft_ = "";
    public boolean hasTimeLeft() { return hasTimeLeft; }
    public java.lang.String getTimeLeft() { return timeLeft_; }
    
    // optional int32 downloadCount = 6;
    public static final int DOWNLOADCOUNT_FIELD_NUMBER = 6;
    private boolean hasDownloadCount;
    private int downloadCount_ = 0;
    public boolean hasDownloadCount() { return hasDownloadCount; }
    public int getDownloadCount() { return downloadCount_; }
    
    // optional string owner = 7;
    public static final int OWNER_FIELD_NUMBER = 7;
    private boolean hasOwner;
    private java.lang.String owner_ = "";
    public boolean hasOwner() { return hasOwner; }
    public java.lang.String getOwner() { return owner_; }
    
    // optional .com.kindroid.hub.proto.ItemType type = 8;
    public static final int TYPE_FIELD_NUMBER = 8;
    private boolean hasType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType type_;
    public boolean hasType() { return hasType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getType() { return type_; }
    
    // optional .com.kindroid.hub.proto.WallPaperOrRingType hasType = 9;
    public static final int HASTYPE_FIELD_NUMBER = 9;
    private boolean hasHasType;
    private com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType hasType_;
    public boolean hasHasType() { return hasHasType; }
    public com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType getHasType() { return hasType_; }
    
    // optional string downloadUrl = 10;
    public static final int DOWNLOADURL_FIELD_NUMBER = 10;
    private boolean hasDownloadUrl;
    private java.lang.String downloadUrl_ = "";
    public boolean hasDownloadUrl() { return hasDownloadUrl; }
    public java.lang.String getDownloadUrl() { return downloadUrl_; }
    
    // optional .com.kindroid.hub.proto.Account account = 11;
    public static final int ACCOUNT_FIELD_NUMBER = 11;
    private boolean hasAccount;
    private com.kindroid.hub.proto.UserProtoc.Account account_;
    public boolean hasAccount() { return hasAccount; }
    public com.kindroid.hub.proto.UserProtoc.Account getAccount() { return account_; }
    
    // optional string downloadUrlExt = 12;
    public static final int DOWNLOADURLEXT_FIELD_NUMBER = 12;
    private boolean hasDownloadUrlExt;
    private java.lang.String downloadUrlExt_ = "";
    public boolean hasDownloadUrlExt() { return hasDownloadUrlExt; }
    public java.lang.String getDownloadUrlExt() { return downloadUrlExt_; }
    
    private void initFields() {
      type_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
      hasType_ = com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.getDefaultInstance();
      account_ = com.kindroid.hub.proto.UserProtoc.Account.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt64(1, getId());
      }
      if (hasLength()) {
        output.writeInt64(2, getLength());
      }
      if (hasName()) {
        output.writeString(3, getName());
      }
      if (hasCreator()) {
        output.writeString(4, getCreator());
      }
      if (hasTimeLeft()) {
        output.writeString(5, getTimeLeft());
      }
      if (hasDownloadCount()) {
        output.writeInt32(6, getDownloadCount());
      }
      if (hasOwner()) {
        output.writeString(7, getOwner());
      }
      if (hasType()) {
        output.writeMessage(8, getType());
      }
      if (hasHasType()) {
        output.writeMessage(9, getHasType());
      }
      if (hasDownloadUrl()) {
        output.writeString(10, getDownloadUrl());
      }
      if (hasAccount()) {
        output.writeMessage(11, getAccount());
      }
      if (hasDownloadUrlExt()) {
        output.writeString(12, getDownloadUrlExt());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getId());
      }
      if (hasLength()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getLength());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName());
      }
      if (hasCreator()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getCreator());
      }
      if (hasTimeLeft()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getTimeLeft());
      }
      if (hasDownloadCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getDownloadCount());
      }
      if (hasOwner()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getOwner());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getType());
      }
      if (hasHasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getHasType());
      }
      if (hasDownloadUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getDownloadUrl());
      }
      if (hasAccount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getAccount());
      }
      if (hasDownloadUrlExt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getDownloadUrlExt());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasCreator()) {
          setCreator(other.getCreator());
        }
        if (other.hasTimeLeft()) {
          setTimeLeft(other.getTimeLeft());
        }
        if (other.hasDownloadCount()) {
          setDownloadCount(other.getDownloadCount());
        }
        if (other.hasOwner()) {
          setOwner(other.getOwner());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasHasType()) {
          mergeHasType(other.getHasType());
        }
        if (other.hasDownloadUrl()) {
          setDownloadUrl(other.getDownloadUrl());
        }
        if (other.hasAccount()) {
          mergeAccount(other.getAccount());
        }
        if (other.hasDownloadUrlExt()) {
          setDownloadUrlExt(other.getDownloadUrlExt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt64());
              break;
            }
            case 16: {
              setLength(input.readInt64());
              break;
            }
            case 26: {
              setName(input.readString());
              break;
            }
            case 34: {
              setCreator(input.readString());
              break;
            }
            case 42: {
              setTimeLeft(input.readString());
              break;
            }
            case 48: {
              setDownloadCount(input.readInt32());
              break;
            }
            case 58: {
              setOwner(input.readString());
              break;
            }
            case 66: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasType()) {
                subBuilder.mergeFrom(getType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setType(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.newBuilder();
              if (hasHasType()) {
                subBuilder.mergeFrom(getHasType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHasType(subBuilder.buildPartial());
              break;
            }
            case 82: {
              setDownloadUrl(input.readString());
              break;
            }
            case 90: {
              com.kindroid.hub.proto.UserProtoc.Account.Builder subBuilder = com.kindroid.hub.proto.UserProtoc.Account.newBuilder();
              if (hasAccount()) {
                subBuilder.mergeFrom(getAccount());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccount(subBuilder.buildPartial());
              break;
            }
            case 98: {
              setDownloadUrlExt(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional int64 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // optional int64 length = 2;
      public boolean hasLength() {
        return result.hasLength();
      }
      public long getLength() {
        return result.getLength();
      }
      public Builder setLength(long value) {
        result.hasLength = true;
        result.length_ = value;
        return this;
      }
      public Builder clearLength() {
        result.hasLength = false;
        result.length_ = 0L;
        return this;
      }
      
      // optional string name = 3;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string creator = 4;
      public boolean hasCreator() {
        return result.hasCreator();
      }
      public java.lang.String getCreator() {
        return result.getCreator();
      }
      public Builder setCreator(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder clearCreator() {
        result.hasCreator = false;
        result.creator_ = getDefaultInstance().getCreator();
        return this;
      }
      
      // optional string timeLeft = 5;
      public boolean hasTimeLeft() {
        return result.hasTimeLeft();
      }
      public java.lang.String getTimeLeft() {
        return result.getTimeLeft();
      }
      public Builder setTimeLeft(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTimeLeft = true;
        result.timeLeft_ = value;
        return this;
      }
      public Builder clearTimeLeft() {
        result.hasTimeLeft = false;
        result.timeLeft_ = getDefaultInstance().getTimeLeft();
        return this;
      }
      
      // optional int32 downloadCount = 6;
      public boolean hasDownloadCount() {
        return result.hasDownloadCount();
      }
      public int getDownloadCount() {
        return result.getDownloadCount();
      }
      public Builder setDownloadCount(int value) {
        result.hasDownloadCount = true;
        result.downloadCount_ = value;
        return this;
      }
      public Builder clearDownloadCount() {
        result.hasDownloadCount = false;
        result.downloadCount_ = 0;
        return this;
      }
      
      // optional string owner = 7;
      public boolean hasOwner() {
        return result.hasOwner();
      }
      public java.lang.String getOwner() {
        return result.getOwner();
      }
      public Builder setOwner(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOwner = true;
        result.owner_ = value;
        return this;
      }
      public Builder clearOwner() {
        result.hasOwner = false;
        result.owner_ = getDefaultInstance().getOwner();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.ItemType type = 8;
      public boolean hasType() {
        return result.hasType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getType() {
        return result.getType();
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasType = true;
        result.type_ = builderForValue.build();
        return this;
      }
      public Builder mergeType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasType() &&
            result.type_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.type_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.type_).mergeFrom(value).buildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.WallPaperOrRingType hasType = 9;
      public boolean hasHasType() {
        return result.hasHasType();
      }
      public com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType getHasType() {
        return result.getHasType();
      }
      public Builder setHasType(com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHasType = true;
        result.hasType_ = value;
        return this;
      }
      public Builder setHasType(com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.Builder builderForValue) {
        result.hasHasType = true;
        result.hasType_ = builderForValue.build();
        return this;
      }
      public Builder mergeHasType(com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType value) {
        if (result.hasHasType() &&
            result.hasType_ != com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.getDefaultInstance()) {
          result.hasType_ =
            com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.newBuilder(result.hasType_).mergeFrom(value).buildPartial();
        } else {
          result.hasType_ = value;
        }
        result.hasHasType = true;
        return this;
      }
      public Builder clearHasType() {
        result.hasHasType = false;
        result.hasType_ = com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.getDefaultInstance();
        return this;
      }
      
      // optional string downloadUrl = 10;
      public boolean hasDownloadUrl() {
        return result.hasDownloadUrl();
      }
      public java.lang.String getDownloadUrl() {
        return result.getDownloadUrl();
      }
      public Builder setDownloadUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDownloadUrl = true;
        result.downloadUrl_ = value;
        return this;
      }
      public Builder clearDownloadUrl() {
        result.hasDownloadUrl = false;
        result.downloadUrl_ = getDefaultInstance().getDownloadUrl();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.Account account = 11;
      public boolean hasAccount() {
        return result.hasAccount();
      }
      public com.kindroid.hub.proto.UserProtoc.Account getAccount() {
        return result.getAccount();
      }
      public Builder setAccount(com.kindroid.hub.proto.UserProtoc.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder setAccount(com.kindroid.hub.proto.UserProtoc.Account.Builder builderForValue) {
        result.hasAccount = true;
        result.account_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccount(com.kindroid.hub.proto.UserProtoc.Account value) {
        if (result.hasAccount() &&
            result.account_ != com.kindroid.hub.proto.UserProtoc.Account.getDefaultInstance()) {
          result.account_ =
            com.kindroid.hub.proto.UserProtoc.Account.newBuilder(result.account_).mergeFrom(value).buildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder clearAccount() {
        result.hasAccount = false;
        result.account_ = com.kindroid.hub.proto.UserProtoc.Account.getDefaultInstance();
        return this;
      }
      
      // optional string downloadUrlExt = 12;
      public boolean hasDownloadUrlExt() {
        return result.hasDownloadUrlExt();
      }
      public java.lang.String getDownloadUrlExt() {
        return result.getDownloadUrlExt();
      }
      public Builder setDownloadUrlExt(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDownloadUrlExt = true;
        result.downloadUrlExt_ = value;
        return this;
      }
      public Builder clearDownloadUrlExt() {
        result.hasDownloadUrlExt = false;
        result.downloadUrlExt_ = getDefaultInstance().getDownloadUrlExt();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.RingOrWallPaper)
    }
    
    static {
      defaultInstance = new RingOrWallPaper(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.RingOrWallPaper)
  }
  
  public static final class ListRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ListRequest.newBuilder() to construct.
    private ListRequest() {
      initFields();
    }
    private ListRequest(boolean noInit) {}
    
    private static final ListRequest defaultInstance;
    public static ListRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ListRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ListRequest_fieldAccessorTable;
    }
    
    // optional string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // optional .com.kindroid.hub.proto.WallPaperOrRingType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType type_;
    public boolean hasType() { return hasType; }
    public com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType getType() { return type_; }
    
    // required .com.kindroid.hub.proto.PageHelper pageHelper = 3;
    public static final int PAGEHELPER_FIELD_NUMBER = 3;
    private boolean hasPageHelper;
    private com.kindroid.hub.proto.CommonProtoc.PageHelper pageHelper_;
    public boolean hasPageHelper() { return hasPageHelper; }
    public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() { return pageHelper_; }
    
    // required .com.kindroid.hub.proto.ItemType itemType = 4;
    public static final int ITEMTYPE_FIELD_NUMBER = 4;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    private void initFields() {
      type_ = com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.getDefaultInstance();
      pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasPageHelper) return false;
      if (!hasItemType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasType()) {
        output.writeMessage(2, getType());
      }
      if (hasPageHelper()) {
        output.writeMessage(3, getPageHelper());
      }
      if (hasItemType()) {
        output.writeMessage(4, getItemType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getType());
      }
      if (hasPageHelper()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPageHelper());
      }
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getItemType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasPageHelper()) {
          mergePageHelper(other.getPageHelper());
        }
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.newBuilder();
              if (hasType()) {
                subBuilder.mergeFrom(getType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setType(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder();
              if (hasPageHelper()) {
                subBuilder.mergeFrom(getPageHelper());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPageHelper(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.WallPaperOrRingType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType getType() {
        return result.getType();
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.Builder builderForValue) {
        result.hasType = true;
        result.type_ = builderForValue.build();
        return this;
      }
      public Builder mergeType(com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType value) {
        if (result.hasType() &&
            result.type_ != com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.getDefaultInstance()) {
          result.type_ =
            com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.newBuilder(result.type_).mergeFrom(value).buildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.kindroid.hub.proto.CommonProtoc.WallPaperOrRingType.getDefaultInstance();
        return this;
      }
      
      // required .com.kindroid.hub.proto.PageHelper pageHelper = 3;
      public boolean hasPageHelper() {
        return result.hasPageHelper();
      }
      public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() {
        return result.getPageHelper();
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPageHelper = true;
        result.pageHelper_ = value;
        return this;
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder builderForValue) {
        result.hasPageHelper = true;
        result.pageHelper_ = builderForValue.build();
        return this;
      }
      public Builder mergePageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (result.hasPageHelper() &&
            result.pageHelper_ != com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance()) {
          result.pageHelper_ =
            com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder(result.pageHelper_).mergeFrom(value).buildPartial();
        } else {
          result.pageHelper_ = value;
        }
        result.hasPageHelper = true;
        return this;
      }
      public Builder clearPageHelper() {
        result.hasPageHelper = false;
        result.pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
        return this;
      }
      
      // required .com.kindroid.hub.proto.ItemType itemType = 4;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ListRequest)
    }
    
    static {
      defaultInstance = new ListRequest(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ListRequest)
  }
  
  public static final class ListResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ListResponse.newBuilder() to construct.
    private ListResponse() {
      initFields();
    }
    private ListResponse(boolean noInit) {}
    
    private static final ListResponse defaultInstance;
    public static ListResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ListResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ListResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.RingOrWallPaper RingOrWallPaper = 2;
    public static final int RINGORWALLPAPER_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> ringOrWallPaper_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> getRingOrWallPaperList() {
      return ringOrWallPaper_;
    }
    public int getRingOrWallPaperCount() { return ringOrWallPaper_.size(); }
    public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getRingOrWallPaper(int index) {
      return ringOrWallPaper_.get(index);
    }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper element : getRingOrWallPaperList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper element : getRingOrWallPaperList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.ringOrWallPaper_ != java.util.Collections.EMPTY_LIST) {
          result.ringOrWallPaper_ =
            java.util.Collections.unmodifiableList(result.ringOrWallPaper_);
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.ringOrWallPaper_.isEmpty()) {
          if (result.ringOrWallPaper_.isEmpty()) {
            result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
          }
          result.ringOrWallPaper_.addAll(other.ringOrWallPaper_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder subBuilder = com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRingOrWallPaper(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.RingOrWallPaper RingOrWallPaper = 2;
      public java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> getRingOrWallPaperList() {
        return java.util.Collections.unmodifiableList(result.ringOrWallPaper_);
      }
      public int getRingOrWallPaperCount() {
        return result.getRingOrWallPaperCount();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getRingOrWallPaper(int index) {
        return result.getRingOrWallPaper(index);
      }
      public Builder setRingOrWallPaper(int index, com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.ringOrWallPaper_.set(index, value);
        return this;
      }
      public Builder setRingOrWallPaper(int index, com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder builderForValue) {
        result.ringOrWallPaper_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRingOrWallPaper(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.ringOrWallPaper_.isEmpty()) {
          result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        result.ringOrWallPaper_.add(value);
        return this;
      }
      public Builder addRingOrWallPaper(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder builderForValue) {
        if (result.ringOrWallPaper_.isEmpty()) {
          result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        result.ringOrWallPaper_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRingOrWallPaper(
          java.lang.Iterable<? extends com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> values) {
        if (result.ringOrWallPaper_.isEmpty()) {
          result.ringOrWallPaper_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        super.addAll(values, result.ringOrWallPaper_);
        return this;
      }
      public Builder clearRingOrWallPaper() {
        result.ringOrWallPaper_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ListResponse)
    }
    
    static {
      defaultInstance = new ListResponse(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ListResponse)
  }
  
  public static final class SearchRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchRequest.newBuilder() to construct.
    private SearchRequest() {
      initFields();
    }
    private SearchRequest(boolean noInit) {}
    
    private static final SearchRequest defaultInstance;
    public static SearchRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_SearchRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_SearchRequest_fieldAccessorTable;
    }
    
    // optional string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string keyword = 2;
    public static final int KEYWORD_FIELD_NUMBER = 2;
    private boolean hasKeyword;
    private java.lang.String keyword_ = "";
    public boolean hasKeyword() { return hasKeyword; }
    public java.lang.String getKeyword() { return keyword_; }
    
    // optional .com.kindroid.hub.proto.ItemType type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType type_;
    public boolean hasType() { return hasType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getType() { return type_; }
    
    // required .com.kindroid.hub.proto.PageHelper pageHelper = 4;
    public static final int PAGEHELPER_FIELD_NUMBER = 4;
    private boolean hasPageHelper;
    private com.kindroid.hub.proto.CommonProtoc.PageHelper pageHelper_;
    public boolean hasPageHelper() { return hasPageHelper; }
    public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() { return pageHelper_; }
    
    private void initFields() {
      type_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
      pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasKeyword) return false;
      if (!hasPageHelper) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasKeyword()) {
        output.writeString(2, getKeyword());
      }
      if (hasType()) {
        output.writeMessage(3, getType());
      }
      if (hasPageHelper()) {
        output.writeMessage(4, getPageHelper());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasKeyword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getKeyword());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getType());
      }
      if (hasPageHelper()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPageHelper());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasKeyword()) {
          setKeyword(other.getKeyword());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasPageHelper()) {
          mergePageHelper(other.getPageHelper());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setKeyword(input.readString());
              break;
            }
            case 26: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasType()) {
                subBuilder.mergeFrom(getType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setType(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder();
              if (hasPageHelper()) {
                subBuilder.mergeFrom(getPageHelper());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPageHelper(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string keyword = 2;
      public boolean hasKeyword() {
        return result.hasKeyword();
      }
      public java.lang.String getKeyword() {
        return result.getKeyword();
      }
      public Builder setKeyword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKeyword = true;
        result.keyword_ = value;
        return this;
      }
      public Builder clearKeyword() {
        result.hasKeyword = false;
        result.keyword_ = getDefaultInstance().getKeyword();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.ItemType type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getType() {
        return result.getType();
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasType = true;
        result.type_ = builderForValue.build();
        return this;
      }
      public Builder mergeType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasType() &&
            result.type_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.type_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.type_).mergeFrom(value).buildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // required .com.kindroid.hub.proto.PageHelper pageHelper = 4;
      public boolean hasPageHelper() {
        return result.hasPageHelper();
      }
      public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() {
        return result.getPageHelper();
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPageHelper = true;
        result.pageHelper_ = value;
        return this;
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder builderForValue) {
        result.hasPageHelper = true;
        result.pageHelper_ = builderForValue.build();
        return this;
      }
      public Builder mergePageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (result.hasPageHelper() &&
            result.pageHelper_ != com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance()) {
          result.pageHelper_ =
            com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder(result.pageHelper_).mergeFrom(value).buildPartial();
        } else {
          result.pageHelper_ = value;
        }
        result.hasPageHelper = true;
        return this;
      }
      public Builder clearPageHelper() {
        result.hasPageHelper = false;
        result.pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.SearchRequest)
    }
    
    static {
      defaultInstance = new SearchRequest(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.SearchRequest)
  }
  
  public static final class SearchResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use SearchResponse.newBuilder() to construct.
    private SearchResponse() {
      initFields();
    }
    private SearchResponse(boolean noInit) {}
    
    private static final SearchResponse defaultInstance;
    public static SearchResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public SearchResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_SearchResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_SearchResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.RingOrWallPaper result = 2;
    public static final int RESULT_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> result_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> getResultList() {
      return result_;
    }
    public int getResultCount() { return result_.size(); }
    public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getResult(int index) {
      return result_.get(index);
    }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper element : getResultList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper element : getResultList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.result_ != java.util.Collections.EMPTY_LIST) {
          result.result_ =
            java.util.Collections.unmodifiableList(result.result_);
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.result_.isEmpty()) {
          if (result.result_.isEmpty()) {
            result.result_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
          }
          result.result_.addAll(other.result_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder subBuilder = com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResult(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.RingOrWallPaper result = 2;
      public java.util.List<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> getResultList() {
        return java.util.Collections.unmodifiableList(result.result_);
      }
      public int getResultCount() {
        return result.getResultCount();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper getResult(int index) {
        return result.getResult(index);
      }
      public Builder setResult(int index, com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.result_.set(index, value);
        return this;
      }
      public Builder setResult(int index, com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder builderForValue) {
        result.result_.set(index, builderForValue.build());
        return this;
      }
      public Builder addResult(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        result.result_.add(value);
        return this;
      }
      public Builder addResult(com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder builderForValue) {
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        result.result_.add(builderForValue.build());
        return this;
      }
      public Builder addAllResult(
          java.lang.Iterable<? extends com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper> values) {
        if (result.result_.isEmpty()) {
          result.result_ = new java.util.ArrayList<com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper>();
        }
        super.addAll(values, result.result_);
        return this;
      }
      public Builder clearResult() {
        result.result_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.SearchResponse)
    }
    
    static {
      defaultInstance = new SearchResponse(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.SearchResponse)
  }
  
  public static final class OperateRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use OperateRequest.newBuilder() to construct.
    private OperateRequest() {
      initFields();
    }
    private OperateRequest(boolean noInit) {}
    
    private static final OperateRequest defaultInstance;
    public static OperateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public OperateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_OperateRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_OperateRequest_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      FORWARD(0, 1),
      REVIEW(1, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return FORWARD;
          case 2: return REVIEW;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        FORWARD, REVIEW, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.kindroid.hub.proto.RingOrWallPaperProtoc.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:com.kindroid.hub.proto.OperateRequest.Type)
    }
    
    // optional string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // optional int64 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    // optional .com.kindroid.hub.proto.OperateRequest.Type type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type type_;
    public boolean hasType() { return hasType; }
    public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type getType() { return type_; }
    
    // optional string content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private boolean hasContent;
    private java.lang.String content_ = "";
    public boolean hasContent() { return hasContent; }
    public java.lang.String getContent() { return content_; }
    
    // optional .com.kindroid.hub.proto.ItemType itemType = 5;
    public static final int ITEMTYPE_FIELD_NUMBER = 5;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    // optional int64 weiboContentId = 6;
    public static final int WEIBOCONTENTID_FIELD_NUMBER = 6;
    private boolean hasWeiboContentId;
    private long weiboContentId_ = 0L;
    public boolean hasWeiboContentId() { return hasWeiboContentId; }
    public long getWeiboContentId() { return weiboContentId_; }
    
    // optional bool isForwardOrReview = 7;
    public static final int ISFORWARDORREVIEW_FIELD_NUMBER = 7;
    private boolean hasIsForwardOrReview;
    private boolean isForwardOrReview_ = false;
    public boolean hasIsForwardOrReview() { return hasIsForwardOrReview; }
    public boolean getIsForwardOrReview() { return isForwardOrReview_; }
    
    private void initFields() {
      type_ = com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type.FORWARD;
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasId()) {
        output.writeInt64(2, getId());
      }
      if (hasType()) {
        output.writeEnum(3, getType().getNumber());
      }
      if (hasContent()) {
        output.writeString(4, getContent());
      }
      if (hasItemType()) {
        output.writeMessage(5, getItemType());
      }
      if (hasWeiboContentId()) {
        output.writeInt64(6, getWeiboContentId());
      }
      if (hasIsForwardOrReview()) {
        output.writeBool(7, getIsForwardOrReview());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getType().getNumber());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getContent());
      }
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getItemType());
      }
      if (hasWeiboContentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getWeiboContentId());
      }
      if (hasIsForwardOrReview()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, getIsForwardOrReview());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        if (other.hasWeiboContentId()) {
          setWeiboContentId(other.getWeiboContentId());
        }
        if (other.hasIsForwardOrReview()) {
          setIsForwardOrReview(other.getIsForwardOrReview());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 16: {
              setId(input.readInt64());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type value = com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 34: {
              setContent(input.readString());
              break;
            }
            case 42: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
            case 48: {
              setWeiboContentId(input.readInt64());
              break;
            }
            case 56: {
              setIsForwardOrReview(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // optional int64 id = 2;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // optional .com.kindroid.hub.proto.OperateRequest.Type type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type getType() {
        return result.getType();
      }
      public Builder setType(com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Type.FORWARD;
        return this;
      }
      
      // optional string content = 4;
      public boolean hasContent() {
        return result.hasContent();
      }
      public java.lang.String getContent() {
        return result.getContent();
      }
      public Builder setContent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = getDefaultInstance().getContent();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.ItemType itemType = 5;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // optional int64 weiboContentId = 6;
      public boolean hasWeiboContentId() {
        return result.hasWeiboContentId();
      }
      public long getWeiboContentId() {
        return result.getWeiboContentId();
      }
      public Builder setWeiboContentId(long value) {
        result.hasWeiboContentId = true;
        result.weiboContentId_ = value;
        return this;
      }
      public Builder clearWeiboContentId() {
        result.hasWeiboContentId = false;
        result.weiboContentId_ = 0L;
        return this;
      }
      
      // optional bool isForwardOrReview = 7;
      public boolean hasIsForwardOrReview() {
        return result.hasIsForwardOrReview();
      }
      public boolean getIsForwardOrReview() {
        return result.getIsForwardOrReview();
      }
      public Builder setIsForwardOrReview(boolean value) {
        result.hasIsForwardOrReview = true;
        result.isForwardOrReview_ = value;
        return this;
      }
      public Builder clearIsForwardOrReview() {
        result.hasIsForwardOrReview = false;
        result.isForwardOrReview_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.OperateRequest)
    }
    
    static {
      defaultInstance = new OperateRequest(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.OperateRequest)
  }
  
  public static final class OperateResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use OperateResponse.newBuilder() to construct.
    private OperateResponse() {
      initFields();
    }
    private OperateResponse(boolean noInit) {}
    
    private static final OperateResponse defaultInstance;
    public static OperateResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public OperateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_OperateResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_OperateResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.OperateResponse)
    }
    
    static {
      defaultInstance = new OperateResponse(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.OperateResponse)
  }
  
  public static final class ReviewListRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ReviewListRequest.newBuilder() to construct.
    private ReviewListRequest() {
      initFields();
    }
    private ReviewListRequest(boolean noInit) {}
    
    private static final ReviewListRequest defaultInstance;
    public static ReviewListRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReviewListRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ReviewListRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ReviewListRequest_fieldAccessorTable;
    }
    
    // optional string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required .com.kindroid.hub.proto.ItemType itemType = 2;
    public static final int ITEMTYPE_FIELD_NUMBER = 2;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    // required .com.kindroid.hub.proto.PageHelper pageHelper = 3;
    public static final int PAGEHELPER_FIELD_NUMBER = 3;
    private boolean hasPageHelper;
    private com.kindroid.hub.proto.CommonProtoc.PageHelper pageHelper_;
    public boolean hasPageHelper() { return hasPageHelper; }
    public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() { return pageHelper_; }
    
    // required int64 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private boolean hasId;
    private long id_ = 0L;
    public boolean hasId() { return hasId; }
    public long getId() { return id_; }
    
    private void initFields() {
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
      pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasItemType) return false;
      if (!hasPageHelper) return false;
      if (!hasId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasItemType()) {
        output.writeMessage(2, getItemType());
      }
      if (hasPageHelper()) {
        output.writeMessage(3, getPageHelper());
      }
      if (hasId()) {
        output.writeInt64(4, getId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getItemType());
      }
      if (hasPageHelper()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPageHelper());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        if (other.hasPageHelper()) {
          mergePageHelper(other.getPageHelper());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder();
              if (hasPageHelper()) {
                subBuilder.mergeFrom(getPageHelper());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPageHelper(subBuilder.buildPartial());
              break;
            }
            case 32: {
              setId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // optional string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required .com.kindroid.hub.proto.ItemType itemType = 2;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // required .com.kindroid.hub.proto.PageHelper pageHelper = 3;
      public boolean hasPageHelper() {
        return result.hasPageHelper();
      }
      public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() {
        return result.getPageHelper();
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPageHelper = true;
        result.pageHelper_ = value;
        return this;
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder builderForValue) {
        result.hasPageHelper = true;
        result.pageHelper_ = builderForValue.build();
        return this;
      }
      public Builder mergePageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (result.hasPageHelper() &&
            result.pageHelper_ != com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance()) {
          result.pageHelper_ =
            com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder(result.pageHelper_).mergeFrom(value).buildPartial();
        } else {
          result.pageHelper_ = value;
        }
        result.hasPageHelper = true;
        return this;
      }
      public Builder clearPageHelper() {
        result.hasPageHelper = false;
        result.pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
        return this;
      }
      
      // required int64 id = 4;
      public boolean hasId() {
        return result.hasId();
      }
      public long getId() {
        return result.getId();
      }
      public Builder setId(long value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ReviewListRequest)
    }
    
    static {
      defaultInstance = new ReviewListRequest(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ReviewListRequest)
  }
  
  public static final class ReviewListResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ReviewListResponse.newBuilder() to construct.
    private ReviewListResponse() {
      initFields();
    }
    private ReviewListResponse(boolean noInit) {}
    
    private static final ReviewListResponse defaultInstance;
    public static ReviewListResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReviewListResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ReviewListResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.RingOrWallPaperProtoc.internal_static_com_kindroid_hub_proto_ReviewListResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.Review review = 2;
    public static final int REVIEW_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.Review> review_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.Review> getReviewList() {
      return review_;
    }
    public int getReviewCount() { return review_.size(); }
    public com.kindroid.hub.proto.WeiboContentProtoc.Review getReview(int index) {
      return review_.get(index);
    }
    
    // optional int32 forwardedCount = 3;
    public static final int FORWARDEDCOUNT_FIELD_NUMBER = 3;
    private boolean hasForwardedCount;
    private int forwardedCount_ = 0;
    public boolean hasForwardedCount() { return hasForwardedCount; }
    public int getForwardedCount() { return forwardedCount_; }
    
    // optional int32 reviewedCount = 4;
    public static final int REVIEWEDCOUNT_FIELD_NUMBER = 4;
    private boolean hasReviewedCount;
    private int reviewedCount_ = 0;
    public boolean hasReviewedCount() { return hasReviewedCount; }
    public int getReviewedCount() { return reviewedCount_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.Review element : getReviewList()) {
        output.writeMessage(2, element);
      }
      if (hasForwardedCount()) {
        output.writeInt32(3, getForwardedCount());
      }
      if (hasReviewedCount()) {
        output.writeInt32(4, getReviewedCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.Review element : getReviewList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasForwardedCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getForwardedCount());
      }
      if (hasReviewedCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getReviewedCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse result;
      
      // Construct using com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.review_ != java.util.Collections.EMPTY_LIST) {
          result.review_ =
            java.util.Collections.unmodifiableList(result.review_);
        }
        com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse) {
          return mergeFrom((com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse other) {
        if (other == com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.review_.isEmpty()) {
          if (result.review_.isEmpty()) {
            result.review_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
          }
          result.review_.addAll(other.review_);
        }
        if (other.hasForwardedCount()) {
          setForwardedCount(other.getForwardedCount());
        }
        if (other.hasReviewedCount()) {
          setReviewedCount(other.getReviewedCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.WeiboContentProtoc.Review.Builder subBuilder = com.kindroid.hub.proto.WeiboContentProtoc.Review.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReview(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setForwardedCount(input.readInt32());
              break;
            }
            case 32: {
              setReviewedCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.Review review = 2;
      public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.Review> getReviewList() {
        return java.util.Collections.unmodifiableList(result.review_);
      }
      public int getReviewCount() {
        return result.getReviewCount();
      }
      public com.kindroid.hub.proto.WeiboContentProtoc.Review getReview(int index) {
        return result.getReview(index);
      }
      public Builder setReview(int index, com.kindroid.hub.proto.WeiboContentProtoc.Review value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.review_.set(index, value);
        return this;
      }
      public Builder setReview(int index, com.kindroid.hub.proto.WeiboContentProtoc.Review.Builder builderForValue) {
        result.review_.set(index, builderForValue.build());
        return this;
      }
      public Builder addReview(com.kindroid.hub.proto.WeiboContentProtoc.Review value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.review_.isEmpty()) {
          result.review_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
        }
        result.review_.add(value);
        return this;
      }
      public Builder addReview(com.kindroid.hub.proto.WeiboContentProtoc.Review.Builder builderForValue) {
        if (result.review_.isEmpty()) {
          result.review_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
        }
        result.review_.add(builderForValue.build());
        return this;
      }
      public Builder addAllReview(
          java.lang.Iterable<? extends com.kindroid.hub.proto.WeiboContentProtoc.Review> values) {
        if (result.review_.isEmpty()) {
          result.review_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
        }
        super.addAll(values, result.review_);
        return this;
      }
      public Builder clearReview() {
        result.review_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 forwardedCount = 3;
      public boolean hasForwardedCount() {
        return result.hasForwardedCount();
      }
      public int getForwardedCount() {
        return result.getForwardedCount();
      }
      public Builder setForwardedCount(int value) {
        result.hasForwardedCount = true;
        result.forwardedCount_ = value;
        return this;
      }
      public Builder clearForwardedCount() {
        result.hasForwardedCount = false;
        result.forwardedCount_ = 0;
        return this;
      }
      
      // optional int32 reviewedCount = 4;
      public boolean hasReviewedCount() {
        return result.hasReviewedCount();
      }
      public int getReviewedCount() {
        return result.getReviewedCount();
      }
      public Builder setReviewedCount(int value) {
        result.hasReviewedCount = true;
        result.reviewedCount_ = value;
        return this;
      }
      public Builder clearReviewedCount() {
        result.hasReviewedCount = false;
        result.reviewedCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ReviewListResponse)
    }
    
    static {
      defaultInstance = new ReviewListResponse(true);
      com.kindroid.hub.proto.RingOrWallPaperProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ReviewListResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_RingOrWallPaper_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_RingOrWallPaper_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ListRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ListRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ListResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ListResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_SearchRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_SearchRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_SearchResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_SearchResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_OperateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_OperateRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_OperateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_OperateResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ReviewListRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ReviewListRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ReviewListResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ReviewListResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033RingOrWallPaperProtoc.proto\022\026com.kindr" +
      "oid.hub.proto\032\022CommonProtoc.proto\032\024Respo" +
      "nseProtoc.proto\032\020UserProtoc.proto\032\030Weibo" +
      "ContentProtoc.proto\"\321\002\n\017RingOrWallPaper\022" +
      "\n\n\002id\030\001 \001(\003\022\016\n\006length\030\002 \001(\003\022\014\n\004name\030\003 \001(" +
      "\t\022\017\n\007creator\030\004 \001(\t\022\020\n\010timeLeft\030\005 \001(\t\022\025\n\r" +
      "downloadCount\030\006 \001(\005\022\r\n\005owner\030\007 \001(\t\022.\n\004ty" +
      "pe\030\010 \001(\0132 .com.kindroid.hub.proto.ItemTy" +
      "pe\022<\n\007hasType\030\t \001(\0132+.com.kindroid.hub.p" +
      "roto.WallPaperOrRingType\022\023\n\013downloadUrl\030",
      "\n \001(\t\0220\n\007account\030\013 \001(\0132\037.com.kindroid.hu" +
      "b.proto.Account\022\026\n\016downloadUrlExt\030\014 \001(\t\"" +
      "\303\001\n\013ListRequest\022\r\n\005token\030\001 \001(\t\0229\n\004type\030\002" +
      " \001(\0132+.com.kindroid.hub.proto.WallPaperO" +
      "rRingType\0226\n\npageHelper\030\003 \002(\0132\".com.kind" +
      "roid.hub.proto.PageHelper\0222\n\010itemType\030\004 " +
      "\002(\0132 .com.kindroid.hub.proto.ItemType\"\204\001" +
      "\n\014ListResponse\0222\n\010response\030\001 \002(\0132 .com.k" +
      "indroid.hub.proto.Response\022@\n\017RingOrWall" +
      "Paper\030\002 \003(\0132\'.com.kindroid.hub.proto.Rin",
      "gOrWallPaper\"\227\001\n\rSearchRequest\022\r\n\005token\030" +
      "\001 \001(\t\022\017\n\007keyword\030\002 \002(\t\022.\n\004type\030\003 \001(\0132 .c" +
      "om.kindroid.hub.proto.ItemType\0226\n\npageHe" +
      "lper\030\004 \002(\0132\".com.kindroid.hub.proto.Page" +
      "Helper\"}\n\016SearchResponse\0222\n\010response\030\001 \002" +
      "(\0132 .com.kindroid.hub.proto.Response\0227\n\006" +
      "result\030\002 \003(\0132\'.com.kindroid.hub.proto.Ri" +
      "ngOrWallPaper\"\377\001\n\016OperateRequest\022\r\n\005toke" +
      "n\030\001 \001(\t\022\n\n\002id\030\002 \001(\003\0229\n\004type\030\003 \001(\0162+.com." +
      "kindroid.hub.proto.OperateRequest.Type\022\017",
      "\n\007content\030\004 \001(\t\0222\n\010itemType\030\005 \001(\0132 .com." +
      "kindroid.hub.proto.ItemType\022\026\n\016weiboCont" +
      "entId\030\006 \001(\003\022\031\n\021isForwardOrReview\030\007 \001(\010\"\037" +
      "\n\004Type\022\013\n\007FORWARD\020\001\022\n\n\006REVIEW\020\002\"E\n\017Opera" +
      "teResponse\0222\n\010response\030\001 \002(\0132 .com.kindr" +
      "oid.hub.proto.Response\"\232\001\n\021ReviewListReq" +
      "uest\022\r\n\005token\030\001 \001(\t\0222\n\010itemType\030\002 \002(\0132 ." +
      "com.kindroid.hub.proto.ItemType\0226\n\npageH" +
      "elper\030\003 \002(\0132\".com.kindroid.hub.proto.Pag" +
      "eHelper\022\n\n\002id\030\004 \002(\003\"\247\001\n\022ReviewListRespon",
      "se\0222\n\010response\030\001 \002(\0132 .com.kindroid.hub." +
      "proto.Response\022.\n\006review\030\002 \003(\0132\036.com.kin" +
      "droid.hub.proto.Review\022\026\n\016forwardedCount" +
      "\030\003 \001(\005\022\025\n\rreviewedCount\030\004 \001(\005B\030\n\026com.kin" +
      "droid.hub.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_hub_proto_RingOrWallPaper_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_hub_proto_RingOrWallPaper_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_RingOrWallPaper_descriptor,
              new java.lang.String[] { "Id", "Length", "Name", "Creator", "TimeLeft", "DownloadCount", "Owner", "Type", "HasType", "DownloadUrl", "Account", "DownloadUrlExt", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.RingOrWallPaper.Builder.class);
          internal_static_com_kindroid_hub_proto_ListRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_hub_proto_ListRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ListRequest_descriptor,
              new java.lang.String[] { "Token", "Type", "PageHelper", "ItemType", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ListRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ListResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_hub_proto_ListResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ListResponse_descriptor,
              new java.lang.String[] { "Response", "RingOrWallPaper", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ListResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_SearchRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_hub_proto_SearchRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_SearchRequest_descriptor,
              new java.lang.String[] { "Token", "Keyword", "Type", "PageHelper", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_SearchResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_hub_proto_SearchResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_SearchResponse_descriptor,
              new java.lang.String[] { "Response", "Result", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.SearchResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_OperateRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kindroid_hub_proto_OperateRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_OperateRequest_descriptor,
              new java.lang.String[] { "Token", "Id", "Type", "Content", "ItemType", "WeiboContentId", "IsForwardOrReview", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_OperateResponse_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_kindroid_hub_proto_OperateResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_OperateResponse_descriptor,
              new java.lang.String[] { "Response", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.OperateResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_ReviewListRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_kindroid_hub_proto_ReviewListRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ReviewListRequest_descriptor,
              new java.lang.String[] { "Token", "ItemType", "PageHelper", "Id", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ReviewListResponse_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_kindroid_hub_proto_ReviewListResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ReviewListResponse_descriptor,
              new java.lang.String[] { "Response", "Review", "ForwardedCount", "ReviewedCount", },
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse.class,
              com.kindroid.hub.proto.RingOrWallPaperProtoc.ReviewListResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.hub.proto.CommonProtoc.getDescriptor(),
          com.kindroid.hub.proto.ResponseProtoc.getDescriptor(),
          com.kindroid.hub.proto.UserProtoc.getDescriptor(),
          com.kindroid.hub.proto.WeiboContentProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}

