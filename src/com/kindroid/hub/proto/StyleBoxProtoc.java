// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StyleBoxProtoc.proto

package com.kindroid.hub.proto;

public final class StyleBoxProtoc {
  private StyleBoxProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ShowItemRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ShowItemRequest.newBuilder() to construct.
    private ShowItemRequest() {
      initFields();
    }
    private ShowItemRequest(boolean noInit) {}
    
    private static final ShowItemRequest defaultInstance;
    public static ShowItemRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ShowItemRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowItemRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowItemRequest_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.ItemType ItemType = 1;
    public static final int ITEMTYPE_FIELD_NUMBER = 1;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    // optional .com.kindroid.hub.proto.PageHelper pageHelper = 2;
    public static final int PAGEHELPER_FIELD_NUMBER = 2;
    private boolean hasPageHelper;
    private com.kindroid.hub.proto.CommonProtoc.PageHelper pageHelper_;
    public boolean hasPageHelper() { return hasPageHelper; }
    public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() { return pageHelper_; }
    
    // optional string keyWord = 3;
    public static final int KEYWORD_FIELD_NUMBER = 3;
    private boolean hasKeyWord;
    private java.lang.String keyWord_ = "";
    public boolean hasKeyWord() { return hasKeyWord; }
    public java.lang.String getKeyWord() { return keyWord_; }
    
    // required .com.kindroid.hub.proto.FromType fromType = 4;
    public static final int FROMTYPE_FIELD_NUMBER = 4;
    private boolean hasFromType;
    private com.kindroid.hub.proto.CommonProtoc.FromType fromType_;
    public boolean hasFromType() { return hasFromType; }
    public com.kindroid.hub.proto.CommonProtoc.FromType getFromType() { return fromType_; }
    
    // optional bool switchPic = 5;
    public static final int SWITCHPIC_FIELD_NUMBER = 5;
    private boolean hasSwitchPic;
    private boolean switchPic_ = false;
    public boolean hasSwitchPic() { return hasSwitchPic; }
    public boolean getSwitchPic() { return switchPic_; }
    
    // optional string pageFlg = 6;
    public static final int PAGEFLG_FIELD_NUMBER = 6;
    private boolean hasPageFlg;
    private java.lang.String pageFlg_ = "";
    public boolean hasPageFlg() { return hasPageFlg; }
    public java.lang.String getPageFlg() { return pageFlg_; }
    
    // optional string byItemComtent = 7;
    public static final int BYITEMCOMTENT_FIELD_NUMBER = 7;
    private boolean hasByItemComtent;
    private java.lang.String byItemComtent_ = "";
    public boolean hasByItemComtent() { return hasByItemComtent; }
    public java.lang.String getByItemComtent() { return byItemComtent_; }
    
    private void initFields() {
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
      pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
      fromType_ = com.kindroid.hub.proto.CommonProtoc.FromType.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasItemType) return false;
      if (!hasFromType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasItemType()) {
        output.writeMessage(1, getItemType());
      }
      if (hasPageHelper()) {
        output.writeMessage(2, getPageHelper());
      }
      if (hasKeyWord()) {
        output.writeString(3, getKeyWord());
      }
      if (hasFromType()) {
        output.writeMessage(4, getFromType());
      }
      if (hasSwitchPic()) {
        output.writeBool(5, getSwitchPic());
      }
      if (hasPageFlg()) {
        output.writeString(6, getPageFlg());
      }
      if (hasByItemComtent()) {
        output.writeString(7, getByItemComtent());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getItemType());
      }
      if (hasPageHelper()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPageHelper());
      }
      if (hasKeyWord()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getKeyWord());
      }
      if (hasFromType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFromType());
      }
      if (hasSwitchPic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, getSwitchPic());
      }
      if (hasPageFlg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getPageFlg());
      }
      if (hasByItemComtent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getByItemComtent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest.getDefaultInstance()) return this;
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        if (other.hasPageHelper()) {
          mergePageHelper(other.getPageHelper());
        }
        if (other.hasKeyWord()) {
          setKeyWord(other.getKeyWord());
        }
        if (other.hasFromType()) {
          mergeFromType(other.getFromType());
        }
        if (other.hasSwitchPic()) {
          setSwitchPic(other.getSwitchPic());
        }
        if (other.hasPageFlg()) {
          setPageFlg(other.getPageFlg());
        }
        if (other.hasByItemComtent()) {
          setByItemComtent(other.getByItemComtent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder();
              if (hasPageHelper()) {
                subBuilder.mergeFrom(getPageHelper());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPageHelper(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setKeyWord(input.readString());
              break;
            }
            case 34: {
              com.kindroid.hub.proto.CommonProtoc.FromType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.FromType.newBuilder();
              if (hasFromType()) {
                subBuilder.mergeFrom(getFromType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFromType(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setSwitchPic(input.readBool());
              break;
            }
            case 50: {
              setPageFlg(input.readString());
              break;
            }
            case 58: {
              setByItemComtent(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.ItemType ItemType = 1;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.PageHelper pageHelper = 2;
      public boolean hasPageHelper() {
        return result.hasPageHelper();
      }
      public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() {
        return result.getPageHelper();
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPageHelper = true;
        result.pageHelper_ = value;
        return this;
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder builderForValue) {
        result.hasPageHelper = true;
        result.pageHelper_ = builderForValue.build();
        return this;
      }
      public Builder mergePageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (result.hasPageHelper() &&
            result.pageHelper_ != com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance()) {
          result.pageHelper_ =
            com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder(result.pageHelper_).mergeFrom(value).buildPartial();
        } else {
          result.pageHelper_ = value;
        }
        result.hasPageHelper = true;
        return this;
      }
      public Builder clearPageHelper() {
        result.hasPageHelper = false;
        result.pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
        return this;
      }
      
      // optional string keyWord = 3;
      public boolean hasKeyWord() {
        return result.hasKeyWord();
      }
      public java.lang.String getKeyWord() {
        return result.getKeyWord();
      }
      public Builder setKeyWord(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKeyWord = true;
        result.keyWord_ = value;
        return this;
      }
      public Builder clearKeyWord() {
        result.hasKeyWord = false;
        result.keyWord_ = getDefaultInstance().getKeyWord();
        return this;
      }
      
      // required .com.kindroid.hub.proto.FromType fromType = 4;
      public boolean hasFromType() {
        return result.hasFromType();
      }
      public com.kindroid.hub.proto.CommonProtoc.FromType getFromType() {
        return result.getFromType();
      }
      public Builder setFromType(com.kindroid.hub.proto.CommonProtoc.FromType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFromType = true;
        result.fromType_ = value;
        return this;
      }
      public Builder setFromType(com.kindroid.hub.proto.CommonProtoc.FromType.Builder builderForValue) {
        result.hasFromType = true;
        result.fromType_ = builderForValue.build();
        return this;
      }
      public Builder mergeFromType(com.kindroid.hub.proto.CommonProtoc.FromType value) {
        if (result.hasFromType() &&
            result.fromType_ != com.kindroid.hub.proto.CommonProtoc.FromType.getDefaultInstance()) {
          result.fromType_ =
            com.kindroid.hub.proto.CommonProtoc.FromType.newBuilder(result.fromType_).mergeFrom(value).buildPartial();
        } else {
          result.fromType_ = value;
        }
        result.hasFromType = true;
        return this;
      }
      public Builder clearFromType() {
        result.hasFromType = false;
        result.fromType_ = com.kindroid.hub.proto.CommonProtoc.FromType.getDefaultInstance();
        return this;
      }
      
      // optional bool switchPic = 5;
      public boolean hasSwitchPic() {
        return result.hasSwitchPic();
      }
      public boolean getSwitchPic() {
        return result.getSwitchPic();
      }
      public Builder setSwitchPic(boolean value) {
        result.hasSwitchPic = true;
        result.switchPic_ = value;
        return this;
      }
      public Builder clearSwitchPic() {
        result.hasSwitchPic = false;
        result.switchPic_ = false;
        return this;
      }
      
      // optional string pageFlg = 6;
      public boolean hasPageFlg() {
        return result.hasPageFlg();
      }
      public java.lang.String getPageFlg() {
        return result.getPageFlg();
      }
      public Builder setPageFlg(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPageFlg = true;
        result.pageFlg_ = value;
        return this;
      }
      public Builder clearPageFlg() {
        result.hasPageFlg = false;
        result.pageFlg_ = getDefaultInstance().getPageFlg();
        return this;
      }
      
      // optional string byItemComtent = 7;
      public boolean hasByItemComtent() {
        return result.hasByItemComtent();
      }
      public java.lang.String getByItemComtent() {
        return result.getByItemComtent();
      }
      public Builder setByItemComtent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasByItemComtent = true;
        result.byItemComtent_ = value;
        return this;
      }
      public Builder clearByItemComtent() {
        result.hasByItemComtent = false;
        result.byItemComtent_ = getDefaultInstance().getByItemComtent();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ShowItemRequest)
    }
    
    static {
      defaultInstance = new ShowItemRequest(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ShowItemRequest)
  }
  
  public static final class ShowItemResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ShowItemResponse.newBuilder() to construct.
    private ShowItemResponse() {
      initFields();
    }
    private ShowItemResponse(boolean noInit) {}
    
    private static final ShowItemResponse defaultInstance;
    public static ShowItemResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ShowItemResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowItemResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowItemResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.WeiboContent weiboContent = 2;
    public static final int WEIBOCONTENT_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> weiboContent_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> getWeiboContentList() {
      return weiboContent_;
    }
    public int getWeiboContentCount() { return weiboContent_.size(); }
    public com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent getWeiboContent(int index) {
      return weiboContent_.get(index);
    }
    
    // optional bool switchPic = 3;
    public static final int SWITCHPIC_FIELD_NUMBER = 3;
    private boolean hasSwitchPic;
    private boolean switchPic_ = false;
    public boolean hasSwitchPic() { return hasSwitchPic; }
    public boolean getSwitchPic() { return switchPic_; }
    
    // optional string pageFlg = 4;
    public static final int PAGEFLG_FIELD_NUMBER = 4;
    private boolean hasPageFlg;
    private java.lang.String pageFlg_ = "";
    public boolean hasPageFlg() { return hasPageFlg; }
    public java.lang.String getPageFlg() { return pageFlg_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent element : getWeiboContentList()) {
        output.writeMessage(2, element);
      }
      if (hasSwitchPic()) {
        output.writeBool(3, getSwitchPic());
      }
      if (hasPageFlg()) {
        output.writeString(4, getPageFlg());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent element : getWeiboContentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasSwitchPic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getSwitchPic());
      }
      if (hasPageFlg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getPageFlg());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.weiboContent_ != java.util.Collections.EMPTY_LIST) {
          result.weiboContent_ =
            java.util.Collections.unmodifiableList(result.weiboContent_);
        }
        com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.weiboContent_.isEmpty()) {
          if (result.weiboContent_.isEmpty()) {
            result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
          }
          result.weiboContent_.addAll(other.weiboContent_);
        }
        if (other.hasSwitchPic()) {
          setSwitchPic(other.getSwitchPic());
        }
        if (other.hasPageFlg()) {
          setPageFlg(other.getPageFlg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.Builder subBuilder = com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWeiboContent(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setSwitchPic(input.readBool());
              break;
            }
            case 34: {
              setPageFlg(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.WeiboContent weiboContent = 2;
      public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> getWeiboContentList() {
        return java.util.Collections.unmodifiableList(result.weiboContent_);
      }
      public int getWeiboContentCount() {
        return result.getWeiboContentCount();
      }
      public com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent getWeiboContent(int index) {
        return result.getWeiboContent(index);
      }
      public Builder setWeiboContent(int index, com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.weiboContent_.set(index, value);
        return this;
      }
      public Builder setWeiboContent(int index, com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.Builder builderForValue) {
        result.weiboContent_.set(index, builderForValue.build());
        return this;
      }
      public Builder addWeiboContent(com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.weiboContent_.isEmpty()) {
          result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
        }
        result.weiboContent_.add(value);
        return this;
      }
      public Builder addWeiboContent(com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent.Builder builderForValue) {
        if (result.weiboContent_.isEmpty()) {
          result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
        }
        result.weiboContent_.add(builderForValue.build());
        return this;
      }
      public Builder addAllWeiboContent(
          java.lang.Iterable<? extends com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent> values) {
        if (result.weiboContent_.isEmpty()) {
          result.weiboContent_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.WeiboContent>();
        }
        super.addAll(values, result.weiboContent_);
        return this;
      }
      public Builder clearWeiboContent() {
        result.weiboContent_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bool switchPic = 3;
      public boolean hasSwitchPic() {
        return result.hasSwitchPic();
      }
      public boolean getSwitchPic() {
        return result.getSwitchPic();
      }
      public Builder setSwitchPic(boolean value) {
        result.hasSwitchPic = true;
        result.switchPic_ = value;
        return this;
      }
      public Builder clearSwitchPic() {
        result.hasSwitchPic = false;
        result.switchPic_ = false;
        return this;
      }
      
      // optional string pageFlg = 4;
      public boolean hasPageFlg() {
        return result.hasPageFlg();
      }
      public java.lang.String getPageFlg() {
        return result.getPageFlg();
      }
      public Builder setPageFlg(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPageFlg = true;
        result.pageFlg_ = value;
        return this;
      }
      public Builder clearPageFlg() {
        result.hasPageFlg = false;
        result.pageFlg_ = getDefaultInstance().getPageFlg();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ShowItemResponse)
    }
    
    static {
      defaultInstance = new ShowItemResponse(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ShowItemResponse)
  }
  
  public static final class ShowReivewRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ShowReivewRequest.newBuilder() to construct.
    private ShowReivewRequest() {
      initFields();
    }
    private ShowReivewRequest(boolean noInit) {}
    
    private static final ShowReivewRequest defaultInstance;
    public static ShowReivewRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ShowReivewRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowReivewRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowReivewRequest_fieldAccessorTable;
    }
    
    // optional string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // optional int64 contentId = 2;
    public static final int CONTENTID_FIELD_NUMBER = 2;
    private boolean hasContentId;
    private long contentId_ = 0L;
    public boolean hasContentId() { return hasContentId; }
    public long getContentId() { return contentId_; }
    
    // required .com.kindroid.hub.proto.ItemType ItemType = 3;
    public static final int ITEMTYPE_FIELD_NUMBER = 3;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    // optional .com.kindroid.hub.proto.PageHelper pageHelper = 4;
    public static final int PAGEHELPER_FIELD_NUMBER = 4;
    private boolean hasPageHelper;
    private com.kindroid.hub.proto.CommonProtoc.PageHelper pageHelper_;
    public boolean hasPageHelper() { return hasPageHelper; }
    public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() { return pageHelper_; }
    
    private void initFields() {
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
      pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasItemType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasContentId()) {
        output.writeInt64(2, getContentId());
      }
      if (hasItemType()) {
        output.writeMessage(3, getItemType());
      }
      if (hasPageHelper()) {
        output.writeMessage(4, getPageHelper());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasContentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getContentId());
      }
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getItemType());
      }
      if (hasPageHelper()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPageHelper());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasContentId()) {
          setContentId(other.getContentId());
        }
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        if (other.hasPageHelper()) {
          mergePageHelper(other.getPageHelper());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 16: {
              setContentId(input.readInt64());
              break;
            }
            case 26: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder();
              if (hasPageHelper()) {
                subBuilder.mergeFrom(getPageHelper());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPageHelper(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // optional int64 contentId = 2;
      public boolean hasContentId() {
        return result.hasContentId();
      }
      public long getContentId() {
        return result.getContentId();
      }
      public Builder setContentId(long value) {
        result.hasContentId = true;
        result.contentId_ = value;
        return this;
      }
      public Builder clearContentId() {
        result.hasContentId = false;
        result.contentId_ = 0L;
        return this;
      }
      
      // required .com.kindroid.hub.proto.ItemType ItemType = 3;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.hub.proto.PageHelper pageHelper = 4;
      public boolean hasPageHelper() {
        return result.hasPageHelper();
      }
      public com.kindroid.hub.proto.CommonProtoc.PageHelper getPageHelper() {
        return result.getPageHelper();
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPageHelper = true;
        result.pageHelper_ = value;
        return this;
      }
      public Builder setPageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper.Builder builderForValue) {
        result.hasPageHelper = true;
        result.pageHelper_ = builderForValue.build();
        return this;
      }
      public Builder mergePageHelper(com.kindroid.hub.proto.CommonProtoc.PageHelper value) {
        if (result.hasPageHelper() &&
            result.pageHelper_ != com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance()) {
          result.pageHelper_ =
            com.kindroid.hub.proto.CommonProtoc.PageHelper.newBuilder(result.pageHelper_).mergeFrom(value).buildPartial();
        } else {
          result.pageHelper_ = value;
        }
        result.hasPageHelper = true;
        return this;
      }
      public Builder clearPageHelper() {
        result.hasPageHelper = false;
        result.pageHelper_ = com.kindroid.hub.proto.CommonProtoc.PageHelper.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ShowReivewRequest)
    }
    
    static {
      defaultInstance = new ShowReivewRequest(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ShowReivewRequest)
  }
  
  public static final class ShowDetailsRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ShowDetailsRequest.newBuilder() to construct.
    private ShowDetailsRequest() {
      initFields();
    }
    private ShowDetailsRequest(boolean noInit) {}
    
    private static final ShowDetailsRequest defaultInstance;
    public static ShowDetailsRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ShowDetailsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowDetailsRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowDetailsRequest_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.ItemType ItemType = 1;
    public static final int ITEMTYPE_FIELD_NUMBER = 1;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    // optional int64 contentId = 2;
    public static final int CONTENTID_FIELD_NUMBER = 2;
    private boolean hasContentId;
    private long contentId_ = 0L;
    public boolean hasContentId() { return hasContentId; }
    public long getContentId() { return contentId_; }
    
    private void initFields() {
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasItemType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasItemType()) {
        output.writeMessage(1, getItemType());
      }
      if (hasContentId()) {
        output.writeInt64(2, getContentId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getItemType());
      }
      if (hasContentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getContentId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest.getDefaultInstance()) return this;
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        if (other.hasContentId()) {
          setContentId(other.getContentId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setContentId(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.ItemType ItemType = 1;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // optional int64 contentId = 2;
      public boolean hasContentId() {
        return result.hasContentId();
      }
      public long getContentId() {
        return result.getContentId();
      }
      public Builder setContentId(long value) {
        result.hasContentId = true;
        result.contentId_ = value;
        return this;
      }
      public Builder clearContentId() {
        result.hasContentId = false;
        result.contentId_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ShowDetailsRequest)
    }
    
    static {
      defaultInstance = new ShowDetailsRequest(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ShowDetailsRequest)
  }
  
  public static final class ShowReviewResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ShowReviewResponse.newBuilder() to construct.
    private ShowReviewResponse() {
      initFields();
    }
    private ShowReviewResponse(boolean noInit) {}
    
    private static final ShowReviewResponse defaultInstance;
    public static ShowReviewResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ShowReviewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowReviewResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_ShowReviewResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // repeated .com.kindroid.hub.proto.Review reviews = 2;
    public static final int REVIEWS_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.Review> reviews_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.Review> getReviewsList() {
      return reviews_;
    }
    public int getReviewsCount() { return reviews_.size(); }
    public com.kindroid.hub.proto.WeiboContentProtoc.Review getReviews(int index) {
      return reviews_.get(index);
    }
    
    // optional int32 reviewCount = 3;
    public static final int REVIEWCOUNT_FIELD_NUMBER = 3;
    private boolean hasReviewCount;
    private int reviewCount_ = 0;
    public boolean hasReviewCount() { return hasReviewCount; }
    public int getReviewCount() { return reviewCount_; }
    
    // optional int32 countForwardCount = 4;
    public static final int COUNTFORWARDCOUNT_FIELD_NUMBER = 4;
    private boolean hasCountForwardCount;
    private int countForwardCount_ = 0;
    public boolean hasCountForwardCount() { return hasCountForwardCount; }
    public int getCountForwardCount() { return countForwardCount_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      for (com.kindroid.hub.proto.WeiboContentProtoc.Review element : getReviewsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.Review element : getReviewsList()) {
        output.writeMessage(2, element);
      }
      if (hasReviewCount()) {
        output.writeInt32(3, getReviewCount());
      }
      if (hasCountForwardCount()) {
        output.writeInt32(4, getCountForwardCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      for (com.kindroid.hub.proto.WeiboContentProtoc.Review element : getReviewsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasReviewCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getReviewCount());
      }
      if (hasCountForwardCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getCountForwardCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.reviews_ != java.util.Collections.EMPTY_LIST) {
          result.reviews_ =
            java.util.Collections.unmodifiableList(result.reviews_);
        }
        com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (!other.reviews_.isEmpty()) {
          if (result.reviews_.isEmpty()) {
            result.reviews_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
          }
          result.reviews_.addAll(other.reviews_);
        }
        if (other.hasReviewCount()) {
          setReviewCount(other.getReviewCount());
        }
        if (other.hasCountForwardCount()) {
          setCountForwardCount(other.getCountForwardCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.hub.proto.WeiboContentProtoc.Review.Builder subBuilder = com.kindroid.hub.proto.WeiboContentProtoc.Review.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReviews(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setReviewCount(input.readInt32());
              break;
            }
            case 32: {
              setCountForwardCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // repeated .com.kindroid.hub.proto.Review reviews = 2;
      public java.util.List<com.kindroid.hub.proto.WeiboContentProtoc.Review> getReviewsList() {
        return java.util.Collections.unmodifiableList(result.reviews_);
      }
      public int getReviewsCount() {
        return result.getReviewsCount();
      }
      public com.kindroid.hub.proto.WeiboContentProtoc.Review getReviews(int index) {
        return result.getReviews(index);
      }
      public Builder setReviews(int index, com.kindroid.hub.proto.WeiboContentProtoc.Review value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.reviews_.set(index, value);
        return this;
      }
      public Builder setReviews(int index, com.kindroid.hub.proto.WeiboContentProtoc.Review.Builder builderForValue) {
        result.reviews_.set(index, builderForValue.build());
        return this;
      }
      public Builder addReviews(com.kindroid.hub.proto.WeiboContentProtoc.Review value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.reviews_.isEmpty()) {
          result.reviews_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
        }
        result.reviews_.add(value);
        return this;
      }
      public Builder addReviews(com.kindroid.hub.proto.WeiboContentProtoc.Review.Builder builderForValue) {
        if (result.reviews_.isEmpty()) {
          result.reviews_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
        }
        result.reviews_.add(builderForValue.build());
        return this;
      }
      public Builder addAllReviews(
          java.lang.Iterable<? extends com.kindroid.hub.proto.WeiboContentProtoc.Review> values) {
        if (result.reviews_.isEmpty()) {
          result.reviews_ = new java.util.ArrayList<com.kindroid.hub.proto.WeiboContentProtoc.Review>();
        }
        super.addAll(values, result.reviews_);
        return this;
      }
      public Builder clearReviews() {
        result.reviews_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 reviewCount = 3;
      public boolean hasReviewCount() {
        return result.hasReviewCount();
      }
      public int getReviewCount() {
        return result.getReviewCount();
      }
      public Builder setReviewCount(int value) {
        result.hasReviewCount = true;
        result.reviewCount_ = value;
        return this;
      }
      public Builder clearReviewCount() {
        result.hasReviewCount = false;
        result.reviewCount_ = 0;
        return this;
      }
      
      // optional int32 countForwardCount = 4;
      public boolean hasCountForwardCount() {
        return result.hasCountForwardCount();
      }
      public int getCountForwardCount() {
        return result.getCountForwardCount();
      }
      public Builder setCountForwardCount(int value) {
        result.hasCountForwardCount = true;
        result.countForwardCount_ = value;
        return this;
      }
      public Builder clearCountForwardCount() {
        result.hasCountForwardCount = false;
        result.countForwardCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.ShowReviewResponse)
    }
    
    static {
      defaultInstance = new ShowReviewResponse(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.ShowReviewResponse)
  }
  
  public static final class CreateReviewRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateReviewRequest.newBuilder() to construct.
    private CreateReviewRequest() {
      initFields();
    }
    private CreateReviewRequest(boolean noInit) {}
    
    private static final CreateReviewRequest defaultInstance;
    public static CreateReviewRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateReviewRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReviewRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReviewRequest_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // optional int64 reviewId = 2;
    public static final int REVIEWID_FIELD_NUMBER = 2;
    private boolean hasReviewId;
    private long reviewId_ = 0L;
    public boolean hasReviewId() { return hasReviewId; }
    public long getReviewId() { return reviewId_; }
    
    // optional int64 contentId = 3;
    public static final int CONTENTID_FIELD_NUMBER = 3;
    private boolean hasContentId;
    private long contentId_ = 0L;
    public boolean hasContentId() { return hasContentId; }
    public long getContentId() { return contentId_; }
    
    // optional string content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private boolean hasContent;
    private java.lang.String content_ = "";
    public boolean hasContent() { return hasContent; }
    public java.lang.String getContent() { return content_; }
    
    // required .com.kindroid.hub.proto.ItemType ItemType = 5;
    public static final int ITEMTYPE_FIELD_NUMBER = 5;
    private boolean hasItemType;
    private com.kindroid.hub.proto.CommonProtoc.ItemType itemType_;
    public boolean hasItemType() { return hasItemType; }
    public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() { return itemType_; }
    
    private void initFields() {
      itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasItemType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasReviewId()) {
        output.writeInt64(2, getReviewId());
      }
      if (hasContentId()) {
        output.writeInt64(3, getContentId());
      }
      if (hasContent()) {
        output.writeString(4, getContent());
      }
      if (hasItemType()) {
        output.writeMessage(5, getItemType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasReviewId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getReviewId());
      }
      if (hasContentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getContentId());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getContent());
      }
      if (hasItemType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getItemType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasReviewId()) {
          setReviewId(other.getReviewId());
        }
        if (other.hasContentId()) {
          setContentId(other.getContentId());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasItemType()) {
          mergeItemType(other.getItemType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 16: {
              setReviewId(input.readInt64());
              break;
            }
            case 24: {
              setContentId(input.readInt64());
              break;
            }
            case 34: {
              setContent(input.readString());
              break;
            }
            case 42: {
              com.kindroid.hub.proto.CommonProtoc.ItemType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder();
              if (hasItemType()) {
                subBuilder.mergeFrom(getItemType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setItemType(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // optional int64 reviewId = 2;
      public boolean hasReviewId() {
        return result.hasReviewId();
      }
      public long getReviewId() {
        return result.getReviewId();
      }
      public Builder setReviewId(long value) {
        result.hasReviewId = true;
        result.reviewId_ = value;
        return this;
      }
      public Builder clearReviewId() {
        result.hasReviewId = false;
        result.reviewId_ = 0L;
        return this;
      }
      
      // optional int64 contentId = 3;
      public boolean hasContentId() {
        return result.hasContentId();
      }
      public long getContentId() {
        return result.getContentId();
      }
      public Builder setContentId(long value) {
        result.hasContentId = true;
        result.contentId_ = value;
        return this;
      }
      public Builder clearContentId() {
        result.hasContentId = false;
        result.contentId_ = 0L;
        return this;
      }
      
      // optional string content = 4;
      public boolean hasContent() {
        return result.hasContent();
      }
      public java.lang.String getContent() {
        return result.getContent();
      }
      public Builder setContent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = getDefaultInstance().getContent();
        return this;
      }
      
      // required .com.kindroid.hub.proto.ItemType ItemType = 5;
      public boolean hasItemType() {
        return result.hasItemType();
      }
      public com.kindroid.hub.proto.CommonProtoc.ItemType getItemType() {
        return result.getItemType();
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder setItemType(com.kindroid.hub.proto.CommonProtoc.ItemType.Builder builderForValue) {
        result.hasItemType = true;
        result.itemType_ = builderForValue.build();
        return this;
      }
      public Builder mergeItemType(com.kindroid.hub.proto.CommonProtoc.ItemType value) {
        if (result.hasItemType() &&
            result.itemType_ != com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance()) {
          result.itemType_ =
            com.kindroid.hub.proto.CommonProtoc.ItemType.newBuilder(result.itemType_).mergeFrom(value).buildPartial();
        } else {
          result.itemType_ = value;
        }
        result.hasItemType = true;
        return this;
      }
      public Builder clearItemType() {
        result.hasItemType = false;
        result.itemType_ = com.kindroid.hub.proto.CommonProtoc.ItemType.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.CreateReviewRequest)
    }
    
    static {
      defaultInstance = new CreateReviewRequest(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.CreateReviewRequest)
  }
  
  public static final class CreateReviewResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateReviewResponse.newBuilder() to construct.
    private CreateReviewResponse() {
      initFields();
    }
    private CreateReviewResponse(boolean noInit) {}
    
    private static final CreateReviewResponse defaultInstance;
    public static CreateReviewResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateReviewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReviewResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReviewResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // optional int32 countReviewByContent = 2;
    public static final int COUNTREVIEWBYCONTENT_FIELD_NUMBER = 2;
    private boolean hasCountReviewByContent;
    private int countReviewByContent_ = 0;
    public boolean hasCountReviewByContent() { return hasCountReviewByContent; }
    public int getCountReviewByContent() { return countReviewByContent_; }
    
    // optional int32 countRealseCount = 3;
    public static final int COUNTREALSECOUNT_FIELD_NUMBER = 3;
    private boolean hasCountRealseCount;
    private int countRealseCount_ = 0;
    public boolean hasCountRealseCount() { return hasCountRealseCount; }
    public int getCountRealseCount() { return countRealseCount_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      if (hasCountReviewByContent()) {
        output.writeInt32(2, getCountReviewByContent());
      }
      if (hasCountRealseCount()) {
        output.writeInt32(3, getCountRealseCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      if (hasCountReviewByContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getCountReviewByContent());
      }
      if (hasCountRealseCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getCountRealseCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (other.hasCountReviewByContent()) {
          setCountReviewByContent(other.getCountReviewByContent());
        }
        if (other.hasCountRealseCount()) {
          setCountRealseCount(other.getCountRealseCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setCountReviewByContent(input.readInt32());
              break;
            }
            case 24: {
              setCountRealseCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // optional int32 countReviewByContent = 2;
      public boolean hasCountReviewByContent() {
        return result.hasCountReviewByContent();
      }
      public int getCountReviewByContent() {
        return result.getCountReviewByContent();
      }
      public Builder setCountReviewByContent(int value) {
        result.hasCountReviewByContent = true;
        result.countReviewByContent_ = value;
        return this;
      }
      public Builder clearCountReviewByContent() {
        result.hasCountReviewByContent = false;
        result.countReviewByContent_ = 0;
        return this;
      }
      
      // optional int32 countRealseCount = 3;
      public boolean hasCountRealseCount() {
        return result.hasCountRealseCount();
      }
      public int getCountRealseCount() {
        return result.getCountRealseCount();
      }
      public Builder setCountRealseCount(int value) {
        result.hasCountRealseCount = true;
        result.countRealseCount_ = value;
        return this;
      }
      public Builder clearCountRealseCount() {
        result.hasCountRealseCount = false;
        result.countRealseCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.CreateReviewResponse)
    }
    
    static {
      defaultInstance = new CreateReviewResponse(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.CreateReviewResponse)
  }
  
  public static final class CreateReleaseRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateReleaseRequest.newBuilder() to construct.
    private CreateReleaseRequest() {
      initFields();
    }
    private CreateReleaseRequest(boolean noInit) {}
    
    private static final CreateReleaseRequest defaultInstance;
    public static CreateReleaseRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateReleaseRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReleaseRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReleaseRequest_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // optional string content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private boolean hasContent;
    private java.lang.String content_ = "";
    public boolean hasContent() { return hasContent; }
    public java.lang.String getContent() { return content_; }
    
    // optional string contentId = 3;
    public static final int CONTENTID_FIELD_NUMBER = 3;
    private boolean hasContentId;
    private java.lang.String contentId_ = "";
    public boolean hasContentId() { return hasContentId; }
    public java.lang.String getContentId() { return contentId_; }
    
    // optional int64 forwarId = 4;
    public static final int FORWARID_FIELD_NUMBER = 4;
    private boolean hasForwarId;
    private long forwarId_ = 0L;
    public boolean hasForwarId() { return hasForwarId; }
    public long getForwarId() { return forwarId_; }
    
    // optional int64 forwardAccountId = 5;
    public static final int FORWARDACCOUNTID_FIELD_NUMBER = 5;
    private boolean hasForwardAccountId;
    private long forwardAccountId_ = 0L;
    public boolean hasForwardAccountId() { return hasForwardAccountId; }
    public long getForwardAccountId() { return forwardAccountId_; }
    
    // optional bytes byteImg = 6;
    public static final int BYTEIMG_FIELD_NUMBER = 6;
    private boolean hasByteImg;
    private com.google.protobuf.ByteString byteImg_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasByteImg() { return hasByteImg; }
    public com.google.protobuf.ByteString getByteImg() { return byteImg_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasContent()) {
        output.writeString(2, getContent());
      }
      if (hasContentId()) {
        output.writeString(3, getContentId());
      }
      if (hasForwarId()) {
        output.writeInt64(4, getForwarId());
      }
      if (hasForwardAccountId()) {
        output.writeInt64(5, getForwardAccountId());
      }
      if (hasByteImg()) {
        output.writeBytes(6, getByteImg());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getContent());
      }
      if (hasContentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getContentId());
      }
      if (hasForwarId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getForwarId());
      }
      if (hasForwardAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, getForwardAccountId());
      }
      if (hasByteImg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getByteImg());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasContentId()) {
          setContentId(other.getContentId());
        }
        if (other.hasForwarId()) {
          setForwarId(other.getForwarId());
        }
        if (other.hasForwardAccountId()) {
          setForwardAccountId(other.getForwardAccountId());
        }
        if (other.hasByteImg()) {
          setByteImg(other.getByteImg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setContent(input.readString());
              break;
            }
            case 26: {
              setContentId(input.readString());
              break;
            }
            case 32: {
              setForwarId(input.readInt64());
              break;
            }
            case 40: {
              setForwardAccountId(input.readInt64());
              break;
            }
            case 50: {
              setByteImg(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // optional string content = 2;
      public boolean hasContent() {
        return result.hasContent();
      }
      public java.lang.String getContent() {
        return result.getContent();
      }
      public Builder setContent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = getDefaultInstance().getContent();
        return this;
      }
      
      // optional string contentId = 3;
      public boolean hasContentId() {
        return result.hasContentId();
      }
      public java.lang.String getContentId() {
        return result.getContentId();
      }
      public Builder setContentId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContentId = true;
        result.contentId_ = value;
        return this;
      }
      public Builder clearContentId() {
        result.hasContentId = false;
        result.contentId_ = getDefaultInstance().getContentId();
        return this;
      }
      
      // optional int64 forwarId = 4;
      public boolean hasForwarId() {
        return result.hasForwarId();
      }
      public long getForwarId() {
        return result.getForwarId();
      }
      public Builder setForwarId(long value) {
        result.hasForwarId = true;
        result.forwarId_ = value;
        return this;
      }
      public Builder clearForwarId() {
        result.hasForwarId = false;
        result.forwarId_ = 0L;
        return this;
      }
      
      // optional int64 forwardAccountId = 5;
      public boolean hasForwardAccountId() {
        return result.hasForwardAccountId();
      }
      public long getForwardAccountId() {
        return result.getForwardAccountId();
      }
      public Builder setForwardAccountId(long value) {
        result.hasForwardAccountId = true;
        result.forwardAccountId_ = value;
        return this;
      }
      public Builder clearForwardAccountId() {
        result.hasForwardAccountId = false;
        result.forwardAccountId_ = 0L;
        return this;
      }
      
      // optional bytes byteImg = 6;
      public boolean hasByteImg() {
        return result.hasByteImg();
      }
      public com.google.protobuf.ByteString getByteImg() {
        return result.getByteImg();
      }
      public Builder setByteImg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasByteImg = true;
        result.byteImg_ = value;
        return this;
      }
      public Builder clearByteImg() {
        result.hasByteImg = false;
        result.byteImg_ = getDefaultInstance().getByteImg();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.CreateReleaseRequest)
    }
    
    static {
      defaultInstance = new CreateReleaseRequest(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.CreateReleaseRequest)
  }
  
  public static final class CreateReleaseResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CreateReleaseResponse.newBuilder() to construct.
    private CreateReleaseResponse() {
      initFields();
    }
    private CreateReleaseResponse(boolean noInit) {}
    
    private static final CreateReleaseResponse defaultInstance;
    public static CreateReleaseResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CreateReleaseResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReleaseResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_CreateReleaseResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    // optional int32 countReviewByContent = 2;
    public static final int COUNTREVIEWBYCONTENT_FIELD_NUMBER = 2;
    private boolean hasCountReviewByContent;
    private int countReviewByContent_ = 0;
    public boolean hasCountReviewByContent() { return hasCountReviewByContent; }
    public int getCountReviewByContent() { return countReviewByContent_; }
    
    // optional int32 countRealseCount = 3;
    public static final int COUNTREALSECOUNT_FIELD_NUMBER = 3;
    private boolean hasCountRealseCount;
    private int countRealseCount_ = 0;
    public boolean hasCountRealseCount() { return hasCountRealseCount; }
    public int getCountRealseCount() { return countRealseCount_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      if (hasCountReviewByContent()) {
        output.writeInt32(2, getCountReviewByContent());
      }
      if (hasCountRealseCount()) {
        output.writeInt32(3, getCountRealseCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      if (hasCountReviewByContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getCountReviewByContent());
      }
      if (hasCountRealseCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getCountRealseCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (other.hasCountReviewByContent()) {
          setCountReviewByContent(other.getCountReviewByContent());
        }
        if (other.hasCountRealseCount()) {
          setCountRealseCount(other.getCountRealseCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setCountReviewByContent(input.readInt32());
              break;
            }
            case 24: {
              setCountRealseCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // optional int32 countReviewByContent = 2;
      public boolean hasCountReviewByContent() {
        return result.hasCountReviewByContent();
      }
      public int getCountReviewByContent() {
        return result.getCountReviewByContent();
      }
      public Builder setCountReviewByContent(int value) {
        result.hasCountReviewByContent = true;
        result.countReviewByContent_ = value;
        return this;
      }
      public Builder clearCountReviewByContent() {
        result.hasCountReviewByContent = false;
        result.countReviewByContent_ = 0;
        return this;
      }
      
      // optional int32 countRealseCount = 3;
      public boolean hasCountRealseCount() {
        return result.hasCountRealseCount();
      }
      public int getCountRealseCount() {
        return result.getCountRealseCount();
      }
      public Builder setCountRealseCount(int value) {
        result.hasCountRealseCount = true;
        result.countRealseCount_ = value;
        return this;
      }
      public Builder clearCountRealseCount() {
        result.hasCountRealseCount = false;
        result.countRealseCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.CreateReleaseResponse)
    }
    
    static {
      defaultInstance = new CreateReleaseResponse(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.CreateReleaseResponse)
  }
  
  public static final class OperationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use OperationRequest.newBuilder() to construct.
    private OperationRequest() {
      initFields();
    }
    private OperationRequest(boolean noInit) {}
    
    private static final OperationRequest defaultInstance;
    public static OperationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public OperationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_OperationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_OperationRequest_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required int64 contentId = 2;
    public static final int CONTENTID_FIELD_NUMBER = 2;
    private boolean hasContentId;
    private long contentId_ = 0L;
    public boolean hasContentId() { return hasContentId; }
    public long getContentId() { return contentId_; }
    
    // optional int64 toAccountId = 3;
    public static final int TOACCOUNTID_FIELD_NUMBER = 3;
    private boolean hasToAccountId;
    private long toAccountId_ = 0L;
    public boolean hasToAccountId() { return hasToAccountId; }
    public long getToAccountId() { return toAccountId_; }
    
    // optional string content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private boolean hasContent;
    private java.lang.String content_ = "";
    public boolean hasContent() { return hasContent; }
    public java.lang.String getContent() { return content_; }
    
    // required .com.kindroid.hub.proto.OperationType type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private boolean hasType;
    private com.kindroid.hub.proto.CommonProtoc.OperationType type_;
    public boolean hasType() { return hasType; }
    public com.kindroid.hub.proto.CommonProtoc.OperationType getType() { return type_; }
    
    private void initFields() {
      type_ = com.kindroid.hub.proto.CommonProtoc.OperationType.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasContentId) return false;
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasContentId()) {
        output.writeInt64(2, getContentId());
      }
      if (hasToAccountId()) {
        output.writeInt64(3, getToAccountId());
      }
      if (hasContent()) {
        output.writeString(4, getContent());
      }
      if (hasType()) {
        output.writeMessage(5, getType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasContentId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getContentId());
      }
      if (hasToAccountId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getToAccountId());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getContent());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasContentId()) {
          setContentId(other.getContentId());
        }
        if (other.hasToAccountId()) {
          setToAccountId(other.getToAccountId());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 16: {
              setContentId(input.readInt64());
              break;
            }
            case 24: {
              setToAccountId(input.readInt64());
              break;
            }
            case 34: {
              setContent(input.readString());
              break;
            }
            case 42: {
              com.kindroid.hub.proto.CommonProtoc.OperationType.Builder subBuilder = com.kindroid.hub.proto.CommonProtoc.OperationType.newBuilder();
              if (hasType()) {
                subBuilder.mergeFrom(getType());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setType(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required int64 contentId = 2;
      public boolean hasContentId() {
        return result.hasContentId();
      }
      public long getContentId() {
        return result.getContentId();
      }
      public Builder setContentId(long value) {
        result.hasContentId = true;
        result.contentId_ = value;
        return this;
      }
      public Builder clearContentId() {
        result.hasContentId = false;
        result.contentId_ = 0L;
        return this;
      }
      
      // optional int64 toAccountId = 3;
      public boolean hasToAccountId() {
        return result.hasToAccountId();
      }
      public long getToAccountId() {
        return result.getToAccountId();
      }
      public Builder setToAccountId(long value) {
        result.hasToAccountId = true;
        result.toAccountId_ = value;
        return this;
      }
      public Builder clearToAccountId() {
        result.hasToAccountId = false;
        result.toAccountId_ = 0L;
        return this;
      }
      
      // optional string content = 4;
      public boolean hasContent() {
        return result.hasContent();
      }
      public java.lang.String getContent() {
        return result.getContent();
      }
      public Builder setContent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = getDefaultInstance().getContent();
        return this;
      }
      
      // required .com.kindroid.hub.proto.OperationType type = 5;
      public boolean hasType() {
        return result.hasType();
      }
      public com.kindroid.hub.proto.CommonProtoc.OperationType getType() {
        return result.getType();
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.OperationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder setType(com.kindroid.hub.proto.CommonProtoc.OperationType.Builder builderForValue) {
        result.hasType = true;
        result.type_ = builderForValue.build();
        return this;
      }
      public Builder mergeType(com.kindroid.hub.proto.CommonProtoc.OperationType value) {
        if (result.hasType() &&
            result.type_ != com.kindroid.hub.proto.CommonProtoc.OperationType.getDefaultInstance()) {
          result.type_ =
            com.kindroid.hub.proto.CommonProtoc.OperationType.newBuilder(result.type_).mergeFrom(value).buildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.kindroid.hub.proto.CommonProtoc.OperationType.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.OperationRequest)
    }
    
    static {
      defaultInstance = new OperationRequest(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.OperationRequest)
  }
  
  public static final class OperationResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use OperationResponse.newBuilder() to construct.
    private OperationResponse() {
      initFields();
    }
    private OperationResponse(boolean noInit) {}
    
    private static final OperationResponse defaultInstance;
    public static OperationResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public OperationResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_OperationResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.hub.proto.StyleBoxProtoc.internal_static_com_kindroid_hub_proto_OperationResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.hub.proto.Response response = 1;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private boolean hasResponse;
    private com.kindroid.hub.proto.ResponseProtoc.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() { return response_; }
    
    private void initFields() {
      response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResponse) return false;
      if (!getResponse().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResponse()) {
        output.writeMessage(1, getResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse result;
      
      // Construct using com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse();
        return builder;
      }
      
      protected com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse.getDescriptor();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse getDefaultInstanceForType() {
        return com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse) {
          return mergeFrom((com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse other) {
        if (other == com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.hub.proto.ResponseProtoc.Response.Builder subBuilder = com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.hub.proto.Response response = 1;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public com.kindroid.hub.proto.ResponseProtoc.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(com.kindroid.hub.proto.ResponseProtoc.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(com.kindroid.hub.proto.ResponseProtoc.Response value) {
        if (result.hasResponse() &&
            result.response_ != com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance()) {
          result.response_ =
            com.kindroid.hub.proto.ResponseProtoc.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = com.kindroid.hub.proto.ResponseProtoc.Response.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.hub.proto.OperationResponse)
    }
    
    static {
      defaultInstance = new OperationResponse(true);
      com.kindroid.hub.proto.StyleBoxProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.hub.proto.OperationResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ShowItemRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ShowItemRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ShowItemResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ShowItemResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ShowReivewRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ShowReivewRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ShowDetailsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ShowDetailsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_ShowReviewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_ShowReviewResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_CreateReviewRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_CreateReviewRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_CreateReviewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_CreateReviewResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_CreateReleaseRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_CreateReleaseRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_CreateReleaseResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_CreateReleaseResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_OperationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_OperationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_hub_proto_OperationResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_hub_proto_OperationResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024StyleBoxProtoc.proto\022\026com.kindroid.hub" +
      ".proto\032\022CommonProtoc.proto\032\030WeiboContent" +
      "Protoc.proto\032\024ResponseProtoc.proto\"\375\001\n\017S" +
      "howItemRequest\0222\n\010ItemType\030\001 \002(\0132 .com.k" +
      "indroid.hub.proto.ItemType\0226\n\npageHelper" +
      "\030\002 \001(\0132\".com.kindroid.hub.proto.PageHelp" +
      "er\022\017\n\007keyWord\030\003 \001(\t\0222\n\010fromType\030\004 \002(\0132 ." +
      "com.kindroid.hub.proto.FromType\022\021\n\tswitc" +
      "hPic\030\005 \001(\010\022\017\n\007pageFlg\030\006 \001(\t\022\025\n\rbyItemCom" +
      "tent\030\007 \001(\t\"\246\001\n\020ShowItemResponse\0222\n\010respo",
      "nse\030\001 \002(\0132 .com.kindroid.hub.proto.Respo" +
      "nse\022:\n\014weiboContent\030\002 \003(\0132$.com.kindroid" +
      ".hub.proto.WeiboContent\022\021\n\tswitchPic\030\003 \001" +
      "(\010\022\017\n\007pageFlg\030\004 \001(\t\"\241\001\n\021ShowReivewReques" +
      "t\022\r\n\005token\030\001 \001(\t\022\021\n\tcontentId\030\002 \001(\003\0222\n\010I" +
      "temType\030\003 \002(\0132 .com.kindroid.hub.proto.I" +
      "temType\0226\n\npageHelper\030\004 \001(\0132\".com.kindro" +
      "id.hub.proto.PageHelper\"[\n\022ShowDetailsRe" +
      "quest\0222\n\010ItemType\030\001 \002(\0132 .com.kindroid.h" +
      "ub.proto.ItemType\022\021\n\tcontentId\030\002 \001(\003\"\251\001\n",
      "\022ShowReviewResponse\0222\n\010response\030\001 \002(\0132 ." +
      "com.kindroid.hub.proto.Response\022/\n\007revie" +
      "ws\030\002 \003(\0132\036.com.kindroid.hub.proto.Review" +
      "\022\023\n\013reviewCount\030\003 \001(\005\022\031\n\021countForwardCou" +
      "nt\030\004 \001(\005\"\216\001\n\023CreateReviewRequest\022\r\n\005toke" +
      "n\030\001 \002(\t\022\020\n\010reviewId\030\002 \001(\003\022\021\n\tcontentId\030\003" +
      " \001(\003\022\017\n\007content\030\004 \001(\t\0222\n\010ItemType\030\005 \002(\0132" +
      " .com.kindroid.hub.proto.ItemType\"\202\001\n\024Cr" +
      "eateReviewResponse\0222\n\010response\030\001 \002(\0132 .c" +
      "om.kindroid.hub.proto.Response\022\034\n\024countR",
      "eviewByContent\030\002 \001(\005\022\030\n\020countRealseCount" +
      "\030\003 \001(\005\"\206\001\n\024CreateReleaseRequest\022\r\n\005token" +
      "\030\001 \002(\t\022\017\n\007content\030\002 \001(\t\022\021\n\tcontentId\030\003 \001" +
      "(\t\022\020\n\010forwarId\030\004 \001(\003\022\030\n\020forwardAccountId" +
      "\030\005 \001(\003\022\017\n\007byteImg\030\006 \001(\014\"\203\001\n\025CreateReleas" +
      "eResponse\0222\n\010response\030\001 \002(\0132 .com.kindro" +
      "id.hub.proto.Response\022\034\n\024countReviewByCo" +
      "ntent\030\002 \001(\005\022\030\n\020countRealseCount\030\003 \001(\005\"\217\001" +
      "\n\020OperationRequest\022\r\n\005token\030\001 \002(\t\022\021\n\tcon" +
      "tentId\030\002 \002(\003\022\023\n\013toAccountId\030\003 \001(\003\022\017\n\007con",
      "tent\030\004 \001(\t\0223\n\004type\030\005 \002(\0132%.com.kindroid." +
      "hub.proto.OperationType\"G\n\021OperationResp" +
      "onse\0222\n\010response\030\001 \002(\0132 .com.kindroid.hu" +
      "b.proto.ResponseB\030\n\026com.kindroid.hub.pro" +
      "to"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_hub_proto_ShowItemRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_hub_proto_ShowItemRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ShowItemRequest_descriptor,
              new java.lang.String[] { "ItemType", "PageHelper", "KeyWord", "FromType", "SwitchPic", "PageFlg", "ByItemComtent", },
              com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest.class,
              com.kindroid.hub.proto.StyleBoxProtoc.ShowItemRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ShowItemResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_hub_proto_ShowItemResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ShowItemResponse_descriptor,
              new java.lang.String[] { "Response", "WeiboContent", "SwitchPic", "PageFlg", },
              com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse.class,
              com.kindroid.hub.proto.StyleBoxProtoc.ShowItemResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_ShowReivewRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_hub_proto_ShowReivewRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ShowReivewRequest_descriptor,
              new java.lang.String[] { "Token", "ContentId", "ItemType", "PageHelper", },
              com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest.class,
              com.kindroid.hub.proto.StyleBoxProtoc.ShowReivewRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ShowDetailsRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_hub_proto_ShowDetailsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ShowDetailsRequest_descriptor,
              new java.lang.String[] { "ItemType", "ContentId", },
              com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest.class,
              com.kindroid.hub.proto.StyleBoxProtoc.ShowDetailsRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_ShowReviewResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_hub_proto_ShowReviewResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_ShowReviewResponse_descriptor,
              new java.lang.String[] { "Response", "Reviews", "ReviewCount", "CountForwardCount", },
              com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse.class,
              com.kindroid.hub.proto.StyleBoxProtoc.ShowReviewResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_CreateReviewRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kindroid_hub_proto_CreateReviewRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_CreateReviewRequest_descriptor,
              new java.lang.String[] { "Token", "ReviewId", "ContentId", "Content", "ItemType", },
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest.class,
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_CreateReviewResponse_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_kindroid_hub_proto_CreateReviewResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_CreateReviewResponse_descriptor,
              new java.lang.String[] { "Response", "CountReviewByContent", "CountRealseCount", },
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse.class,
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReviewResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_CreateReleaseRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_kindroid_hub_proto_CreateReleaseRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_CreateReleaseRequest_descriptor,
              new java.lang.String[] { "Token", "Content", "ContentId", "ForwarId", "ForwardAccountId", "ByteImg", },
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest.class,
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_CreateReleaseResponse_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_kindroid_hub_proto_CreateReleaseResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_CreateReleaseResponse_descriptor,
              new java.lang.String[] { "Response", "CountReviewByContent", "CountRealseCount", },
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse.class,
              com.kindroid.hub.proto.StyleBoxProtoc.CreateReleaseResponse.Builder.class);
          internal_static_com_kindroid_hub_proto_OperationRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_kindroid_hub_proto_OperationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_OperationRequest_descriptor,
              new java.lang.String[] { "Token", "ContentId", "ToAccountId", "Content", "Type", },
              com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest.class,
              com.kindroid.hub.proto.StyleBoxProtoc.OperationRequest.Builder.class);
          internal_static_com_kindroid_hub_proto_OperationResponse_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_kindroid_hub_proto_OperationResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_hub_proto_OperationResponse_descriptor,
              new java.lang.String[] { "Response", },
              com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse.class,
              com.kindroid.hub.proto.StyleBoxProtoc.OperationResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.hub.proto.CommonProtoc.getDescriptor(),
          com.kindroid.hub.proto.WeiboContentProtoc.getDescriptor(),
          com.kindroid.hub.proto.ResponseProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
